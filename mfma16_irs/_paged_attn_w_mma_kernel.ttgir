#blocked = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [4, 16], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [64], warpsPerCTA = [2], order = [0]}>
#loc = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0)
#loc1 = loc(unknown)
#loc57 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":299:41)
#loc71 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":315:35)
#mma = #triton_gpu.amd_mfma<{versionMajor = 3, versionMinor = 0, warpsPerCTA = [2, 1], instrShape = [16, 16], isTransposed = true}>
#shared = #triton_gpu.shared<{vec = 4, perPhase = 1, maxPhase = 16, order = [1, 0], hasLeadingOffset = false}>
#shared1 = #triton_gpu.shared<{vec = 4, perPhase = 1, maxPhase = 16, order = [0, 1], hasLeadingOffset = false}>
#shared2 = #triton_gpu.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [1, 0], hasLeadingOffset = false}>
#loc104 = loc(callsite(#loc1 at #loc57))
#loc107 = loc(callsite(#loc1 at #loc71))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "hip:gfx942", "triton_gpu.threads-per-warp" = 64 : i32} {
  tt.func public @_paged_attn_w_mma_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg4: !tt.ptr<f16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg5: !tt.ptr<f16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg6: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg7: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg8: f32 loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0), %arg18: i32 {tt.divisibility = 16 : i32} loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":198:0)) attributes {noinline = false} {
    %cst = arith.constant dense<8> : tensor<16x1xi32, #mma> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<16x64xf32, #mma> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<16x128xf16, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<16xi32, #blocked1> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<1.44269502> : tensor<16x128xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<16x128xf32, #mma> loc(#loc1)
    %cst_6 = arith.constant dense<0xFF800000> : tensor<16x64xf32, #mma> loc(#loc1)
    %cst_7 = arith.constant dense<1.000000e+00> : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc1)
    %cst_8 = arith.constant dense<0.000000e+00> : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc1)
    %cst_9 = arith.constant dense<0xFF800000> : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.addptr %arg6, %0 : !tt.ptr<i32>, i32 loc(#loc3)
    %2 = tt.load %1 : !tt.ptr<i32> loc(#loc4)
    %3 = tt.get_program_id y : i32 loc(#loc5)
    %4 = tt.get_program_id z : i32 loc(#loc6)
    %5 = tt.get_num_programs z : i32 loc(#loc7)
    %6 = arith.muli %4, %c256_i32 : i32 loc(#loc8)
    %7 = arith.cmpi sge, %6, %2 : i32 loc(#loc9)
    cf.cond_br %7, ^bb1, ^bb2 loc(#loc9)
  ^bb1:  // pred: ^bb0
    tt.return loc(#loc10)
  ^bb2:  // pred: ^bb0
    %8 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<16x128x!tt.ptr<f16>, #blocked> loc(#loc11)
    %9 = arith.muli %0, %arg10 : i32 loc(#loc12)
    %10 = tt.splat %9 : i32 -> tensor<16x1xi32, #blocked> loc(#loc13)
    %11 = arith.muli %3, %c8_i32 : i32 loc(#loc14)
    %12 = tt.splat %11 : i32 -> tensor<16x1xi32, #blocked> loc(#loc15)
    %13 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc16)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xi32, #blocked> loc(#loc16)
    %15 = arith.addi %12, %14 : tensor<16x1xi32, #blocked> loc(#loc15)
    %16 = tt.splat %arg11 : i32 -> tensor<16x1xi32, #blocked> loc(#loc17)
    %17 = arith.muli %15, %16 : tensor<16x1xi32, #blocked> loc(#loc17)
    %18 = arith.addi %10, %17 : tensor<16x1xi32, #blocked> loc(#loc13)
    %19 = tt.broadcast %18 : tensor<16x1xi32, #blocked> -> tensor<16x128xi32, #blocked> loc(#loc18)
    %20 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc19)
    %21 = tt.expand_dims %20 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc19)
    %22 = tt.broadcast %21 : tensor<1x128xi32, #blocked> -> tensor<16x128xi32, #blocked> loc(#loc18)
    %23 = arith.addi %19, %22 : tensor<16x128xi32, #blocked> loc(#loc18)
    %24 = tt.addptr %8, %23 : tensor<16x128x!tt.ptr<f16>, #blocked>, tensor<16x128xi32, #blocked> loc(#loc11)
    %25 = arith.cmpi slt, %14, %cst_0 : tensor<16x1xi32, #blocked> loc(#loc20)
    %26 = tt.broadcast %25 : tensor<16x1xi1, #blocked> -> tensor<16x128xi1, #blocked> loc(#loc21)
    %27 = tt.load %24, %26, %cst_2 : tensor<16x128x!tt.ptr<f16>, #blocked> loc(#loc21)
    %28 = arith.addi %6, %c256_i32 : i32 loc(#loc22)
    %29 = arith.minsi %28, %2 : i32 loc(#loc23)
    %30 = arith.subi %29, %6 : i32 loc(#loc24)
    %31 = arith.addi %30, %c63_i32 : i32 loc(#loc101)
    %32 = arith.divsi %31, %c64_i32 : i32 loc(#loc102)
    %33 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc28)
    %34 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked1> loc(#loc29)
    %35 = arith.muli %3, %arg13 : i32 loc(#loc30)
    %36 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc31)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc31)
    %38 = tt.splat %arg14 : i32 -> tensor<64x1xi32, #blocked> loc(#loc32)
    %39 = arith.muli %37, %38 : tensor<64x1xi32, #blocked> loc(#loc32)
    %40 = tt.splat %35 : i32 -> tensor<64x1xi32, #blocked> loc(#loc33)
    %41 = arith.addi %40, %39 : tensor<64x1xi32, #blocked> loc(#loc33)
    %42 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc19)
    %43 = tt.expand_dims %42 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> -> tensor<1x128xi32, #mma> loc(#loc19)
    %44 = tt.broadcast %41 : tensor<64x1xi32, #blocked> -> tensor<64x128xi32, #blocked> loc(#loc34)
    %45 = tt.broadcast %21 : tensor<1x128xi32, #blocked> -> tensor<64x128xi32, #blocked> loc(#loc34)
    %46 = arith.addi %44, %45 : tensor<64x128xi32, #blocked> loc(#loc34)
    %47 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc16)
    %48 = tt.expand_dims %47 {axis = 1 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<16x1xi32, #mma> loc(#loc16)
    %49 = tt.broadcast %43 : tensor<1x128xi32, #mma> -> tensor<16x128xi32, #mma> loc(#loc18)
    %50 = arith.cmpi slt, %48, %cst : tensor<16x1xi32, #mma> loc(#loc20)
    %51 = tt.broadcast %50 : tensor<16x1xi1, #mma> -> tensor<16x128xi1, #mma> loc(#loc21)
    %52 = arith.extf %27 : tensor<16x128xf16, #blocked> to tensor<16x128xf32, #blocked> loc(#loc35)
    %53 = tt.splat %arg8 : f32 -> tensor<16x128xf32, #blocked> loc(#loc35)
    %54 = arith.mulf %52, %53 : tensor<16x128xf32, #blocked> loc(#loc35)
    %55 = arith.mulf %54, %cst_4 : tensor<16x128xf32, #blocked> loc(#loc36)
    %56 = arith.truncf %55 : tensor<16x128xf32, #blocked> to tensor<16x128xf16, #blocked> loc(#loc37)
    %57 = triton_gpu.local_alloc %56 : (tensor<16x128xf16, #blocked>) -> !tt.memdesc<16x128xf16, #shared, #triton_gpu.shared_memory> loc(#loc37)
    %58 = triton_gpu.local_load %57 : !tt.memdesc<16x128xf16, #shared, #triton_gpu.shared_memory> -> tensor<16x128xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 4}>> loc(#loc37)
    %59 = arith.muli %4, %c4_i32 : i32 loc(#loc38)
    %60 = arith.muli %0, %arg9 : i32 loc(#loc39)
    %61 = tt.addptr %arg7, %60 : !tt.ptr<i32>, i32 loc(#loc40)
    %62 = tt.splat %arg4 : !tt.ptr<f16> -> tensor<64x128x!tt.ptr<f16>, #blocked> loc(#loc41)
    %63 = tt.splat %2 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc42)
    %64 = tt.splat %arg5 : !tt.ptr<f16> -> tensor<64x128x!tt.ptr<f16>, #blocked> loc(#loc43)
    %65:3 = scf.for %arg19 = %c0_i32 to %32 step %c1_i32 iter_args(%arg20 = %cst_5, %arg21 = %cst_8, %arg22 = %cst_9) -> (tensor<16x128xf32, #mma>, tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>)  : i32 {
      %100 = arith.addi %59, %arg19 : i32 loc(#loc45)
      %101 = tt.addptr %61, %100 : !tt.ptr<i32>, i32 loc(#loc46)
      %102 = tt.load %101 : !tt.ptr<i32> loc(#loc47)
      %103 = arith.muli %102, %arg12 : i32 loc(#loc48)
      %104 = tt.splat %103 : i32 -> tensor<64x128xi32, #blocked> loc(#loc49)
      %105 = arith.addi %104, %46 : tensor<64x128xi32, #blocked> loc(#loc49)
      %106 = tt.addptr %62, %105 : tensor<64x128x!tt.ptr<f16>, #blocked>, tensor<64x128xi32, #blocked> loc(#loc41)
      %107 = tt.load %106 : tensor<64x128x!tt.ptr<f16>, #blocked> loc(#loc50)
      %108 = tt.addptr %64, %105 : tensor<64x128x!tt.ptr<f16>, #blocked>, tensor<64x128xi32, #blocked> loc(#loc43)
      %109 = tt.load %108 : tensor<64x128x!tt.ptr<f16>, #blocked> loc(#loc51)
      %110 = arith.muli %100, %c64_i32 : i32 loc(#loc52)
      %111 = tt.splat %110 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc53)
      %112 = arith.addi %111, %33 : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc53)
      %113 = triton_gpu.local_alloc %107 : (tensor<64x128xf16, #blocked>) -> !tt.memdesc<64x128xf16, #shared, #triton_gpu.shared_memory> loc(#loc54)
      %114 = tt.trans %113 {order = array<i32: 1, 0>} : !tt.memdesc<64x128xf16, #shared, #triton_gpu.shared_memory> -> !tt.memdesc<128x64xf16, #shared1, #triton_gpu.shared_memory> loc(#loc54)
      %115 = triton_gpu.local_load %114 : !tt.memdesc<128x64xf16, #shared1, #triton_gpu.shared_memory> -> tensor<128x64xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 4}>> loc(#loc54)
      %116 = tt.dot %58, %115, %cst_1 : tensor<16x128xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 4}>> * tensor<128x64xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 4}>> -> tensor<16x64xf32, #mma> loc(#loc54)
      amdgpu.instruction_sched_hint loc(#loc54)
      %117 = arith.cmpi slt, %112, %63 : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #mma}>> loc(#loc42)
      %118 = tt.expand_dims %117 {axis = 0 : i32} : tensor<64xi1, #triton_gpu.slice<{dim = 0, parent = #mma}>> -> tensor<1x64xi1, #mma> loc(#loc55)
      %119 = tt.broadcast %118 : tensor<1x64xi1, #mma> -> tensor<16x64xi1, #mma> loc(#loc55)
      %120 = arith.select %119, %116, %cst_6 : tensor<16x64xi1, #mma>, tensor<16x64xf32, #mma> loc(#loc55)
      %121 = "tt.reduce"(%120) <{axis = 1 : i32}> ({
      ^bb0(%arg23: f32 loc(callsite(#loc1 at #loc57)), %arg24: f32 loc(callsite(#loc1 at #loc57))):
        %141 = arith.maxnumf %arg23, %arg24 : f32 loc(#loc109)
        tt.reduce.return %141 : f32 loc(#loc103)
      }) : (tensor<16x64xf32, #mma>) -> tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc103)
      %122 = arith.maxnumf %arg22, %121 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc59)
      %123 = tt.expand_dims %122 {axis = 1 : i32} : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<16x1xf32, #mma> loc(#loc60)
      %124 = tt.broadcast %123 : tensor<16x1xf32, #mma> -> tensor<16x64xf32, #mma> loc(#loc61)
      %125 = arith.subf %120, %124 : tensor<16x64xf32, #mma> loc(#loc61)
      %126 = math.exp2 %125 : tensor<16x64xf32, #mma> loc(#loc62)
      %127 = arith.subf %arg22, %122 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc63)
      %128 = math.exp2 %127 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc64)
      %129 = tt.expand_dims %128 {axis = 1 : i32} : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<16x1xf32, #mma> loc(#loc65)
      %130 = tt.broadcast %129 : tensor<16x1xf32, #mma> -> tensor<16x128xf32, #mma> loc(#loc66)
      %131 = arith.mulf %arg20, %130 : tensor<16x128xf32, #mma> loc(#loc66)
      %132 = arith.truncf %126 : tensor<16x64xf32, #mma> to tensor<16x64xf16, #mma> loc(#loc67)
      %133 = triton_gpu.convert_layout %132 : tensor<16x64xf16, #mma> -> tensor<16x64xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 4}>> loc(#loc67)
      %134 = triton_gpu.local_alloc %109 : (tensor<64x128xf16, #blocked>) -> !tt.memdesc<64x128xf16, #shared2, #triton_gpu.shared_memory> loc(#loc51)
      %135 = triton_gpu.local_load %134 : !tt.memdesc<64x128xf16, #shared2, #triton_gpu.shared_memory> -> tensor<64x128xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 4}>> loc(#loc51)
      %136 = tt.dot %133, %135, %131 : tensor<16x64xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 4}>> * tensor<64x128xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 4}>> -> tensor<16x128xf32, #mma> loc(#loc68)
      amdgpu.instruction_sched_hint loc(#loc68)
      %137 = arith.mulf %arg21, %128 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc69)
      %138 = "tt.reduce"(%132) <{axis = 1 : i32}> ({
      ^bb0(%arg23: f16 loc(callsite(#loc1 at #loc71)), %arg24: f16 loc(callsite(#loc1 at #loc71))):
        %141 = arith.addf %arg23, %arg24 : f16 loc(#loc110)
        tt.reduce.return %141 : f16 loc(#loc106)
      }) : (tensor<16x64xf16, #mma>) -> tensor<16xf16, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc106)
      %139 = arith.extf %138 : tensor<16xf16, #triton_gpu.slice<{dim = 1, parent = #mma}>> to tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc73)
      %140 = arith.addf %137, %139 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc73)
      scf.yield %136, %140, %122 : tensor<16x128xf32, #mma>, tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc74)
    } loc(#loc44)
    %66 = arith.divf %cst_7, %65#1 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc75)
    %67 = tt.expand_dims %66 {axis = 1 : i32} : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<16x1xf32, #mma> loc(#loc76)
    %68 = tt.broadcast %67 : tensor<16x1xf32, #mma> -> tensor<16x128xf32, #mma> loc(#loc77)
    %69 = arith.mulf %65#0, %68 : tensor<16x128xf32, #mma> loc(#loc77)
    %70 = arith.muli %0, %c4_i32 : i32 loc(#loc78)
    %71 = arith.addi %70, %3 : i32 loc(#loc79)
    %72 = arith.muli %71, %5 : i32 loc(#loc80)
    %73 = arith.muli %72, %c8_i32 : i32 loc(#loc81)
    %74 = arith.muli %4, %c8_i32 : i32 loc(#loc82)
    %75 = arith.addi %73, %74 : i32 loc(#loc83)
    %76 = tt.splat %75 : i32 -> tensor<16xi32, #blocked1> loc(#loc84)
    %77 = arith.addi %76, %34 : tensor<16xi32, #blocked1> loc(#loc84)
    %78 = arith.cmpi slt, %34, %cst_3 : tensor<16xi32, #blocked1> loc(#loc85)
    %79 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc86)
    %80 = tt.addptr %79, %77 : tensor<16x!tt.ptr<f32>, #blocked1>, tensor<16xi32, #blocked1> loc(#loc86)
    %81 = triton_gpu.convert_layout %65#2 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<16xf32, #blocked1> loc(#loc87)
    tt.store %80, %81, %78 : tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc87)
    %82 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc88)
    %83 = tt.addptr %82, %77 : tensor<16x!tt.ptr<f32>, #blocked1>, tensor<16xi32, #blocked1> loc(#loc88)
    %84 = triton_gpu.convert_layout %65#1 : tensor<16xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<16xf32, #blocked1> loc(#loc89)
    tt.store %83, %84, %78 : tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc89)
    %85 = arith.muli %0, %arg15 : i32 loc(#loc90)
    %86 = arith.muli %3, %arg16 : i32 loc(#loc91)
    %87 = arith.addi %85, %86 : i32 loc(#loc92)
    %88 = arith.muli %4, %arg17 : i32 loc(#loc93)
    %89 = tt.splat %arg18 : i32 -> tensor<16x1xi32, #mma> loc(#loc94)
    %90 = arith.muli %48, %89 : tensor<16x1xi32, #mma> loc(#loc94)
    %91 = tt.splat %88 : i32 -> tensor<16x1xi32, #mma> loc(#loc95)
    %92 = arith.addi %91, %90 : tensor<16x1xi32, #mma> loc(#loc95)
    %93 = tt.broadcast %92 : tensor<16x1xi32, #mma> -> tensor<16x128xi32, #mma> loc(#loc96)
    %94 = arith.addi %93, %49 : tensor<16x128xi32, #mma> loc(#loc96)
    %95 = tt.splat %87 : i32 -> tensor<16x128xi32, #mma> loc(#loc97)
    %96 = arith.addi %95, %94 : tensor<16x128xi32, #mma> loc(#loc97)
    %97 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<16x128x!tt.ptr<f16>, #mma> loc(#loc98)
    %98 = tt.addptr %97, %96 : tensor<16x128x!tt.ptr<f16>, #mma>, tensor<16x128xi32, #mma> loc(#loc98)
    %99 = arith.truncf %69 : tensor<16x128xf32, #mma> to tensor<16x128xf16, #mma> loc(#loc99)
    tt.store %98, %99, %51 : tensor<16x128x!tt.ptr<f16>, #mma> loc(#loc99)
    tt.return loc(#loc100)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":229:28)
#loc3 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":240:45)
#loc4 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":240:26)
#loc5 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":230:32)
#loc6 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":231:29)
#loc7 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":232:41)
#loc8 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":242:39)
#loc9 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":243:32)
#loc10 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":244:12)
#loc11 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":268:24)
#loc12 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":262:18)
#loc13 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":263:10)
#loc14 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":263:25)
#loc15 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":263:44)
#loc16 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":263:65)
#loc17 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":263:77)
#loc18 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":264:10)
#loc19 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":257:22)
#loc20 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":266:49)
#loc21 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":268:16)
#loc22 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":245:57)
#loc23 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":245:73)
#loc24 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":246:47)
#loc25 = loc("/triton/python/triton/language/standard.py":40:22)
#loc26 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":246:66)
#loc27 = loc("/triton/python/triton/language/standard.py":40:28)
#loc28 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":250:32)
#loc29 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":252:40)
#loc30 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":255:22)
#loc31 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":256:23)
#loc32 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":256:34)
#loc33 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":256:10)
#loc34 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":257:10)
#loc35 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":269:13)
#loc36 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":269:26)
#loc37 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":269:36)
#loc38 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":275:34)
#loc39 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":279:41)
#loc40 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":279:31)
#loc41 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":288:34)
#loc42 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":297:36)
#loc43 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":307:34)
#loc44 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":276:19)
#loc45 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":277:38)
#loc46 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":279:54)
#loc47 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":279:12)
#loc48 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":283:41)
#loc49 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":283:54)
#loc50 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":288:20)
#loc51 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":307:20)
#loc52 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":284:34)
#loc53 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":284:50)
#loc54 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":294:23)
#loc55 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":297:53)
#loc56 = loc("/triton/python/triton/language/standard.py":184:40)
#loc58 = loc("/triton/python/triton/language/standard.py":163:27)
#loc59 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":299:34)
#loc60 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":302:39)
#loc61 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":302:31)
#loc62 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":302:26)
#loc63 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":303:36)
#loc64 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":303:30)
#loc65 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":304:21)
#loc66 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":304:15)
#loc67 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":312:17)
#loc68 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":313:25)
#loc69 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":315:20)
#loc70 = loc("/triton/python/triton/language/standard.py":267:36)
#loc72 = loc("/triton/python/triton/language/standard.py":256:15)
#loc73 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":315:28)
#loc74 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":316:8)
#loc75 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":317:18)
#loc76 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":318:24)
#loc77 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":318:16)
#loc78 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":322:23)
#loc79 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":322:38)
#loc80 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":323:14)
#loc81 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":324:14)
#loc82 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":325:25)
#loc83 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":325:14)
#loc84 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":326:14)
#loc85 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":328:38)
#loc86 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":329:27)
#loc87 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":329:40)
#loc88 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":330:27)
#loc89 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":330:40)
#loc90 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":332:27)
#loc91 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":334:36)
#loc92 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":334:22)
#loc93 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":338:19)
#loc94 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":339:42)
#loc95 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":339:10)
#loc96 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":340:10)
#loc97 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":338:8)
#loc98 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":344:23)
#loc99 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":344:35)
#loc100 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels/paged_attn.py":344:4)
#loc101 = loc(callsite(#loc25 at #loc26))
#loc102 = loc(callsite(#loc27 at #loc26))
#loc103 = loc(callsite(#loc56 at #loc57))
#loc105 = loc(callsite(#loc58 at #loc56))
#loc106 = loc(callsite(#loc70 at #loc71))
#loc108 = loc(callsite(#loc72 at #loc70))
#loc109 = loc(callsite(#loc105 at #loc57))
#loc110 = loc(callsite(#loc108 at #loc71))
