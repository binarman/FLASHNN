; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare !dbg !6 float @llvm.amdgcn.exp2.f32(float) #0

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_paged_attn_w_mma_kernel(ptr addrspace(1) inreg nocapture writeonly %0, ptr addrspace(1) inreg nocapture writeonly %1, ptr addrspace(1) inreg nocapture writeonly %2, ptr addrspace(1) inreg nocapture readonly %3, ptr addrspace(1) inreg nocapture readonly %4, ptr addrspace(1) inreg nocapture readonly %5, ptr addrspace(1) inreg nocapture readonly %6, ptr addrspace(1) inreg nocapture readonly %7, float inreg %8, i32 inreg %9, i32 inreg %10, i32 inreg %11, i32 inreg %12, i32 inreg %13, i32 inreg %14, i32 inreg %15, i32 inreg %16, i32 inreg %17, i32 inreg %18) local_unnamed_addr #1 !dbg !9 {
  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !10
  %21 = sext i32 %20 to i64, !dbg !11
  %22 = getelementptr i32, ptr addrspace(1) %6, i64 %21, !dbg !11
  %unmaskedload = load <1 x i32>, ptr addrspace(1) %22, align 4, !dbg !12
  %23 = extractelement <1 x i32> %unmaskedload, i64 0, !dbg !12
  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y(), !dbg !13
  %25 = tail call i32 @llvm.amdgcn.workgroup.id.z(), !dbg !14
  %26 = tail call align 4 dereferenceable(64) ptr addrspace(4) @llvm.amdgcn.dispatch.ptr(), !dbg !15
  %27 = getelementptr inbounds i8, ptr addrspace(4) %26, i64 20, !dbg !15
  %28 = load i32, ptr addrspace(4) %27, align 4, !dbg !15, !tbaa !16
  %29 = getelementptr inbounds i8, ptr addrspace(4) %26, i64 8, !dbg !15
  %30 = load i16, ptr addrspace(4) %29, align 4, !dbg !15, !range !25, !invariant.load !8, !noundef !8
  %31 = zext nneg i16 %30 to i32, !dbg !15
  %32 = udiv i32 %28, %31, !dbg !15
  %33 = mul i32 %32, %31, !dbg !15
  %34 = icmp ugt i32 %28, %33, !dbg !15
  %35 = zext i1 %34 to i32, !dbg !15
  %36 = add i32 %32, %35, !dbg !15
  %37 = shl i32 %25, 8, !dbg !26
  %.not = icmp slt i32 %37, %23, !dbg !27
  br i1 %.not, label %38, label %common.ret, !dbg !27

common.ret:                                       ; preds = %19, %._crit_edge
  ret void, !dbg !28

38:                                               ; preds = %19
  %39 = mul i32 %10, %20, !dbg !29
  %40 = shl i32 %24, 3, !dbg !30
  %41 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !31
  %42 = lshr i32 %41, 6, !dbg !31
  %43 = and i32 %41, 16, !dbg !31
  %.lobit25 = lshr i32 %41, 4, !dbg !31
  %44 = and i32 %.lobit25, 4, !dbg !31
  %45 = and i32 %.lobit25, 7, !dbg !31
  %46 = or disjoint i32 %45, 8, !dbg !31
  %47 = or disjoint i32 %45, %40, !dbg !32
  %48 = mul i32 %11, %47, !dbg !33
  %49 = shl i32 %41, 3, !dbg !34
  %50 = and i32 %49, 120, !dbg !34
  %51 = add i32 %39, %50, !dbg !35
  %52 = add i32 %51, %48, !dbg !36
  %53 = sext i32 %52 to i64, !dbg !37
  %54 = getelementptr half, ptr addrspace(1) %3, i64 %53, !dbg !37
  %unmaskedload4 = load <8 x half>, ptr addrspace(1) %54, align 16, !dbg !38
  %55 = add i32 %37, 256, !dbg !39
  %56 = tail call i32 @llvm.smin.i32(i32 %55, i32 %23), !dbg !40
  %reass.sub = sub i32 %56, %37, !dbg !41
  %57 = add i32 %reass.sub, 63, !dbg !41
  %58 = sdiv i32 %57, 64, !dbg !45
  %59 = and i32 %41, 60, !dbg !46
  %60 = or disjoint i32 %59, 1, !dbg !46
  %61 = or disjoint i32 %59, 2, !dbg !46
  %62 = or disjoint i32 %59, 3, !dbg !46
  %63 = and i32 %41, 3, !dbg !47
  %64 = and i32 %41, 15, !dbg !47
  %65 = or disjoint i32 %59, 64, !dbg !34
  %66 = or disjoint i32 %44, %63, !dbg !31
  %67 = fmul float %8, 0.000000e+00, !dbg !48
  %68 = fmul float %67, 0x3FF7154760000000, !dbg !49
  %69 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 0, i32 1>, !dbg !48
  %70 = fpext <2 x half> %69 to <2 x float>, !dbg !48
  %71 = insertelement <2 x float> poison, float %8, i64 0, !dbg !48
  %72 = shufflevector <2 x float> %71, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !48
  %73 = fmul <2 x float> %72, %70, !dbg !48
  %74 = fmul <2 x float> %73, <float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !49
  %75 = fptrunc <2 x float> %74 to <2 x half>, !dbg !50
  %76 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 2, i32 3>, !dbg !48
  %77 = fpext <2 x half> %76 to <2 x float>, !dbg !48
  %78 = fmul <2 x float> %72, %77, !dbg !48
  %79 = fmul <2 x float> %78, <float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !49
  %80 = fptrunc <2 x float> %79 to <2 x half>, !dbg !50
  %81 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 4, i32 5>, !dbg !48
  %82 = fpext <2 x half> %81 to <2 x float>, !dbg !48
  %83 = fmul <2 x float> %72, %82, !dbg !48
  %84 = fmul <2 x float> %83, <float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !49
  %85 = fptrunc <2 x float> %84 to <2 x half>, !dbg !50
  %86 = shufflevector <8 x half> %unmaskedload4, <8 x half> poison, <2 x i32> <i32 6, i32 7>, !dbg !48
  %87 = fpext <2 x half> %86 to <2 x float>, !dbg !48
  %88 = fmul <2 x float> %72, %87, !dbg !48
  %89 = fmul <2 x float> %88, <float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !49
  %90 = fptrunc <2 x float> %89 to <2 x half>, !dbg !50
  %91 = fptrunc float %68 to half, !dbg !50
  %92 = lshr exact i32 %43, 2, !dbg !50
  %93 = or disjoint i32 %50, %92, !dbg !50
  %94 = lshr i32 %41, 2, !dbg !50
  %95 = and i32 %94, 8, !dbg !50
  %96 = xor i32 %93, %95, !dbg !50
  %97 = shl nuw nsw i32 %45, 7, !dbg !50
  %98 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %96, !dbg !50
  %99 = getelementptr inbounds half, ptr addrspace(3) %98, i32 %97, !dbg !50
  %100 = shufflevector <2 x half> %75, <2 x half> %80, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !50
  store <4 x half> %100, ptr addrspace(3) %99, align 8, !dbg !50
  %101 = or disjoint i32 %50, 4, !dbg !50
  %102 = or disjoint i32 %95, %92, !dbg !50
  %103 = xor i32 %102, %101, !dbg !50
  %104 = getelementptr half, ptr addrspace(3) @global_smem, i32 %103, !dbg !50
  %105 = getelementptr half, ptr addrspace(3) %104, i32 %97, !dbg !50
  %106 = shufflevector <2 x half> %85, <2 x half> %90, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !50
  store <4 x half> %106, ptr addrspace(3) %105, align 8, !dbg !50
  %107 = shl nuw nsw i32 %46, 7, !dbg !50
  %108 = getelementptr inbounds half, ptr addrspace(3) %98, i32 %107, !dbg !50
  %109 = insertelement <4 x half> poison, half %91, i64 0, !dbg !50
  %110 = shufflevector <4 x half> %109, <4 x half> poison, <4 x i32> zeroinitializer, !dbg !50
  store <4 x half> %110, ptr addrspace(3) %108, align 8, !dbg !50
  %111 = getelementptr half, ptr addrspace(3) %104, i32 %107, !dbg !50
  store <4 x half> %110, ptr addrspace(3) %111, align 8, !dbg !50
  fence syncscope("workgroup") release, !dbg !50
  tail call void @llvm.amdgcn.s.barrier(), !dbg !50
  fence syncscope("workgroup") acquire, !dbg !50
  %112 = shl i32 %25, 2, !dbg !51
  %113 = mul i32 %9, %20, !dbg !52
  %114 = sext i32 %113 to i64, !dbg !53
  %115 = getelementptr i32, ptr addrspace(1) %7, i64 %114, !dbg !53
  %116 = icmp sgt i32 %57, 63, !dbg !54
  br i1 %116, label %.lr.ph, label %.._crit_edge_crit_edge, !dbg !54

.._crit_edge_crit_edge:                           ; preds = %38
  %.pre = shl nuw nsw i32 %42, 2, !dbg !55
  %.pre35 = and i32 %.pre, 4, !dbg !55
  %.pre37 = or disjoint i32 %.pre35, %63, !dbg !55
  br label %._crit_edge, !dbg !54

.lr.ph:                                           ; preds = %38
  %117 = and i32 %.lobit25, 3, !dbg !31
  %118 = and i32 %41, 48, !dbg !50
  %119 = shl i32 %41, 2, !dbg !50
  %120 = and i32 %119, 12, !dbg !50
  %121 = or disjoint i32 %120, 64, !dbg !50
  %and.ra27 = and i32 %41, 12, !dbg !50
  %122 = xor i32 %121, %and.ra27, !dbg !50
  %123 = or disjoint i32 %118, %122, !dbg !50
  %124 = getelementptr half, ptr addrspace(3) @global_smem, i32 %123, !dbg !50
  %125 = shl nuw nsw i32 %66, 7, !dbg !50
  %126 = or disjoint i32 %125, 1024, !dbg !50
  %127 = getelementptr half, ptr addrspace(3) %124, i32 %126, !dbg !50
  %128 = load <2 x i32>, ptr addrspace(3) %127, align 8, !dbg !50
  %129 = xor i32 %119, %41, !dbg !50
  %130 = and i32 %129, 12, !dbg !50
  %131 = or disjoint i32 %118, %130, !dbg !50
  %132 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %131, !dbg !50
  %133 = getelementptr inbounds half, ptr addrspace(3) %132, i32 %126, !dbg !50
  %134 = load <2 x i32>, ptr addrspace(3) %133, align 8, !dbg !50
  %135 = getelementptr half, ptr addrspace(3) %124, i32 %125, !dbg !50
  %136 = load <2 x i32>, ptr addrspace(3) %135, align 8, !dbg !50
  %137 = getelementptr inbounds half, ptr addrspace(3) %132, i32 %125, !dbg !50
  %138 = load <2 x i32>, ptr addrspace(3) %137, align 8, !dbg !50
  %139 = or disjoint i32 %45, 56, !dbg !56
  %140 = mul i32 %14, %139, !dbg !57
  %141 = or disjoint i32 %45, 48, !dbg !56
  %142 = mul i32 %14, %141, !dbg !57
  %143 = or disjoint i32 %45, 40, !dbg !56
  %144 = mul i32 %14, %143, !dbg !57
  %145 = or disjoint i32 %45, 32, !dbg !56
  %146 = mul i32 %14, %145, !dbg !57
  %147 = or disjoint i32 %45, 24, !dbg !56
  %148 = mul i32 %14, %147, !dbg !57
  %149 = or disjoint i32 %45, 16, !dbg !56
  %150 = mul i32 %14, %149, !dbg !57
  %151 = mul i32 %14, %46, !dbg !57
  %152 = mul i32 %14, %45, !dbg !57
  %153 = mul i32 %13, %24, !dbg !58
  %154 = add i32 %153, %50
  %155 = add i32 %154, %152
  %156 = add i32 %154, %151
  %157 = add i32 %154, %150
  %158 = add i32 %154, %148
  %159 = add i32 %154, %146
  %160 = add i32 %154, %144
  %161 = add i32 %154, %142
  %162 = add i32 %154, %140
  %163 = shl nuw nsw i32 %43, 2
  %164 = xor i32 %50, %163
  %165 = or disjoint i32 %97, %164
  %166 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %165
  %167 = or disjoint i32 %107, %164
  %168 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %167
  %169 = or disjoint i32 %97, 2048
  %170 = or disjoint i32 %169, %164
  %171 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %170
  %172 = or disjoint i32 %97, 3072
  %173 = or disjoint i32 %172, %164
  %174 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %173
  %175 = or disjoint i32 %97, 4096
  %176 = or disjoint i32 %175, %164
  %177 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %176
  %178 = or disjoint i32 %97, 5120
  %179 = or disjoint i32 %178, %164
  %180 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %179
  %181 = or disjoint i32 %97, 6144
  %182 = or disjoint i32 %181, %164
  %183 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %182
  %184 = or disjoint i32 %97, 7168
  %185 = or disjoint i32 %184, %164
  %186 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %185
  %187 = shl i32 %41, 6
  %188 = and i32 %187, 64
  %189 = and i32 %41, 63
  %190 = shl nuw nsw i32 %189, 7
  %191 = or disjoint i32 %188, %190
  %192 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %191
  %193 = xor i32 %191, 64
  %194 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %193
  %195 = extractelement <2 x i32> %138, i64 0
  %196 = extractelement <2 x i32> %138, i64 1
  %197 = or disjoint i32 %120, 16
  %198 = or disjoint i32 %120, 32
  %199 = or disjoint i32 %120, 48
  %200 = or disjoint i32 %120, 80
  %201 = or disjoint i32 %120, 96
  %202 = or disjoint i32 %120, 112
  %203 = or disjoint i32 %120, 128
  %204 = or disjoint i32 %120, 144
  %205 = or disjoint i32 %120, 160
  %206 = or disjoint i32 %120, 176
  %207 = or disjoint i32 %120, 192
  %208 = or disjoint i32 %120, 208
  %209 = or disjoint i32 %120, 224
  %210 = or disjoint i32 %120, 240
  %211 = extractelement <2 x i32> %136, i64 0
  %212 = extractelement <2 x i32> %136, i64 1
  %213 = extractelement <2 x i32> %134, i64 0
  %214 = extractelement <2 x i32> %134, i64 1
  %215 = extractelement <2 x i32> %128, i64 0
  %216 = extractelement <2 x i32> %128, i64 1
  %217 = xor i32 %119, 128
  %218 = shl nuw nsw i32 %42, 2
  %219 = and i32 %218, 4
  %220 = or disjoint i32 %219, %63
  %.idx26 = mul nuw nsw i32 %220, 136
  %221 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx26
  %222 = getelementptr half, ptr addrspace(3) %221, i32 %59
  %223 = getelementptr half, ptr addrspace(3) %221, i32 %60
  %224 = getelementptr half, ptr addrspace(3) %221, i32 %61
  %225 = getelementptr half, ptr addrspace(3) %221, i32 %62
  %226 = or disjoint i32 %219, %117
  %227 = and i32 %119, 60
  %.idx = mul nuw nsw i32 %226, 136
  %228 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx
  %229 = getelementptr half, ptr addrspace(3) %228, i32 %227
  %230 = and i32 %119, 60
  %231 = xor i32 %102, %230
  %232 = shl nuw nsw i32 %45, 6
  %233 = or disjoint i32 %231, %232
  %234 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %233
  %235 = shl nuw nsw i32 %46, 6
  %236 = or disjoint i32 %231, %235
  %237 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %236
  %238 = getelementptr inbounds i8, ptr addrspace(3) %132, i32 %125
  %239 = getelementptr inbounds i8, ptr addrspace(3) %132, i32 %126
  %240 = or disjoint i32 %97, %50
  %241 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %240
  %242 = or disjoint i32 %107, %50
  %243 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %242
  %244 = or disjoint i32 %169, %50
  %245 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %244
  %246 = or disjoint i32 %172, %50
  %247 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %246
  %248 = or disjoint i32 %175, %50
  %249 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %248
  %250 = or disjoint i32 %178, %50
  %251 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %250
  %252 = or disjoint i32 %181, %50
  %253 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %252
  %254 = or disjoint i32 %184, %50
  %255 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %254
  %256 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %189
  %257 = or disjoint i32 %189, 128
  %258 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %257
  %259 = or disjoint i32 %189, 256
  %260 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %259
  %261 = or disjoint i32 %189, 384
  %262 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %261
  %263 = or disjoint i32 %189, 512
  %264 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %263
  %265 = or disjoint i32 %189, 640
  %266 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %265
  %267 = or disjoint i32 %189, 768
  %268 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %267
  %269 = or disjoint i32 %189, 896
  %270 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %269
  %271 = or disjoint i32 %189, 1024
  %272 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %271
  %273 = or disjoint i32 %189, 1152
  %274 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %273
  %275 = or disjoint i32 %189, 1280
  %276 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %275
  %277 = or disjoint i32 %189, 1408
  %278 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %277
  %279 = or disjoint i32 %189, 1536
  %280 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %279
  %281 = or disjoint i32 %189, 1664
  %282 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %281
  %283 = or disjoint i32 %189, 1792
  %284 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %283
  %285 = or disjoint i32 %189, 1920
  %286 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %285
  %287 = or disjoint i32 %189, 2048
  %288 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %287
  %289 = or disjoint i32 %189, 2176
  %290 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %289
  %291 = or disjoint i32 %189, 2304
  %292 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %291
  %293 = or disjoint i32 %189, 2432
  %294 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %293
  %295 = or disjoint i32 %189, 2560
  %296 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %295
  %297 = or disjoint i32 %189, 2688
  %298 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %297
  %299 = or disjoint i32 %189, 2816
  %300 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %299
  %301 = or disjoint i32 %189, 2944
  %302 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %301
  %303 = or disjoint i32 %189, 3072
  %304 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %303
  %305 = or disjoint i32 %189, 3200
  %306 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %305
  %307 = or disjoint i32 %189, 3328
  %308 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %307
  %309 = or disjoint i32 %189, 3456
  %310 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %309
  %311 = or disjoint i32 %189, 3584
  %312 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %311
  %313 = or disjoint i32 %189, 3712
  %314 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %313
  %315 = or disjoint i32 %189, 3840
  %316 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %315
  %317 = or disjoint i32 %189, 3968
  %318 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %317
  %319 = or disjoint i32 %189, 4096
  %320 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %319
  %321 = or disjoint i32 %189, 4224
  %322 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %321
  %323 = or disjoint i32 %189, 4352
  %324 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %323
  %325 = or disjoint i32 %189, 4480
  %326 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %325
  %327 = or disjoint i32 %189, 4608
  %328 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %327
  %329 = or disjoint i32 %189, 4736
  %330 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %329
  %331 = or disjoint i32 %189, 4864
  %332 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %331
  %333 = or disjoint i32 %189, 4992
  %334 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %333
  %335 = or disjoint i32 %189, 5120
  %336 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %335
  %337 = or disjoint i32 %189, 5248
  %338 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %337
  %339 = or disjoint i32 %189, 5376
  %340 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %339
  %341 = or disjoint i32 %189, 5504
  %342 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %341
  %343 = or disjoint i32 %189, 5632
  %344 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %343
  %345 = or disjoint i32 %189, 5760
  %346 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %345
  %347 = or disjoint i32 %189, 5888
  %348 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %347
  %349 = or disjoint i32 %189, 6016
  %350 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %349
  %351 = or disjoint i32 %189, 6144
  %352 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %351
  %353 = or disjoint i32 %189, 6272
  %354 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %353
  %355 = or disjoint i32 %189, 6400
  %356 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %355
  %357 = or disjoint i32 %189, 6528
  %358 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %357
  %359 = or disjoint i32 %189, 6656
  %360 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %359
  %361 = or disjoint i32 %189, 6784
  %362 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %361
  %363 = or disjoint i32 %189, 6912
  %364 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %363
  %365 = or disjoint i32 %189, 7040
  %366 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %365
  %367 = or disjoint i32 %189, 7168
  %368 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %367
  %369 = or disjoint i32 %189, 7296
  %370 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %369
  %371 = or disjoint i32 %189, 7424
  %372 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %371
  %373 = or disjoint i32 %189, 7552
  %374 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %373
  %375 = or disjoint i32 %189, 7680
  %376 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %375
  %377 = or disjoint i32 %189, 7808
  %378 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %377
  %379 = or disjoint i32 %189, 7936
  %380 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %379
  %381 = or disjoint i32 %189, 8064
  %382 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %381
  %383 = or disjoint i32 %189, 64
  %384 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %383
  %385 = or disjoint i32 %189, 192
  %386 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %385
  %387 = or disjoint i32 %189, 320
  %388 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %387
  %389 = or disjoint i32 %189, 448
  %390 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %389
  %391 = or disjoint i32 %189, 576
  %392 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %391
  %393 = or disjoint i32 %189, 704
  %394 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %393
  %395 = or disjoint i32 %189, 832
  %396 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %395
  %397 = or disjoint i32 %189, 960
  %398 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %397
  %399 = or disjoint i32 %189, 1088
  %400 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %399
  %401 = or disjoint i32 %189, 1216
  %402 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %401
  %403 = or disjoint i32 %189, 1344
  %404 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %403
  %405 = or disjoint i32 %189, 1472
  %406 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %405
  %407 = or disjoint i32 %189, 1600
  %408 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %407
  %409 = or disjoint i32 %189, 1728
  %410 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %409
  %411 = or disjoint i32 %189, 1856
  %412 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %411
  %413 = or disjoint i32 %189, 1984
  %414 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %413
  %415 = or disjoint i32 %189, 2112
  %416 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %415
  %417 = or disjoint i32 %189, 2240
  %418 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %417
  %419 = or disjoint i32 %189, 2368
  %420 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %419
  %421 = or disjoint i32 %189, 2496
  %422 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %421
  %423 = or disjoint i32 %189, 2624
  %424 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %423
  %425 = or disjoint i32 %189, 2752
  %426 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %425
  %427 = or disjoint i32 %189, 2880
  %428 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %427
  %429 = or disjoint i32 %189, 3008
  %430 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %429
  %431 = or disjoint i32 %189, 3136
  %432 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %431
  %433 = or disjoint i32 %189, 3264
  %434 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %433
  %435 = or disjoint i32 %189, 3392
  %436 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %435
  %437 = or disjoint i32 %189, 3520
  %438 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %437
  %439 = or disjoint i32 %189, 3648
  %440 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %439
  %441 = or disjoint i32 %189, 3776
  %442 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %441
  %443 = or disjoint i32 %189, 3904
  %444 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %443
  %445 = or disjoint i32 %189, 4032
  %446 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %445
  %447 = or disjoint i32 %189, 4160
  %448 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %447
  %449 = or disjoint i32 %189, 4288
  %450 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %449
  %451 = or disjoint i32 %189, 4416
  %452 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %451
  %453 = or disjoint i32 %189, 4544
  %454 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %453
  %455 = or disjoint i32 %189, 4672
  %456 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %455
  %457 = or disjoint i32 %189, 4800
  %458 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %457
  %459 = or disjoint i32 %189, 4928
  %460 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %459
  %461 = or disjoint i32 %189, 5056
  %462 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %461
  %463 = or disjoint i32 %189, 5184
  %464 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %463
  %465 = or disjoint i32 %189, 5312
  %466 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %465
  %467 = or disjoint i32 %189, 5440
  %468 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %467
  %469 = or disjoint i32 %189, 5568
  %470 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %469
  %471 = or disjoint i32 %189, 5696
  %472 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %471
  %473 = or disjoint i32 %189, 5824
  %474 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %473
  %475 = or disjoint i32 %189, 5952
  %476 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %475
  %477 = or disjoint i32 %189, 6080
  %478 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %477
  %479 = or disjoint i32 %189, 6208
  %480 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %479
  %481 = or disjoint i32 %189, 6336
  %482 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %481
  %483 = or disjoint i32 %189, 6464
  %484 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %483
  %485 = or disjoint i32 %189, 6592
  %486 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %485
  %487 = or disjoint i32 %189, 6720
  %488 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %487
  %489 = or disjoint i32 %189, 6848
  %490 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %489
  %491 = or disjoint i32 %189, 6976
  %492 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %491
  %493 = or disjoint i32 %189, 7104
  %494 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %493
  %495 = or disjoint i32 %189, 7232
  %496 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %495
  %497 = or disjoint i32 %189, 7360
  %498 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %497
  %499 = or disjoint i32 %189, 7488
  %500 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %499
  %501 = or disjoint i32 %189, 7616
  %502 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %501
  %503 = or disjoint i32 %189, 7744
  %504 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %503
  %505 = or disjoint i32 %189, 7872
  %506 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %505
  %507 = or disjoint i32 %189, 8000
  %508 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %507
  %509 = or disjoint i32 %189, 8128
  %510 = getelementptr inbounds half, ptr addrspace(3) @global_smem, i32 %509
  br label %511, !dbg !54

511:                                              ; preds = %.lr.ph, %511
  %512 = phi float [ 0xFFF0000000000000, %.lr.ph ], [ %1042, %511 ]
  %513 = phi float [ 0xFFF0000000000000, %.lr.ph ], [ %1043, %511 ]
  %514 = phi i32 [ 0, %.lr.ph ], [ %1669, %511 ]
  %515 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1668, %511 ]
  %516 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1670, %511 ]
  %517 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1671, %511 ]
  %518 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1672, %511 ]
  %519 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1673, %511 ]
  %520 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1674, %511 ]
  %521 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1675, %511 ]
  %522 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1676, %511 ]
  %523 = phi <2 x float> [ zeroinitializer, %.lr.ph ], [ %1677, %511 ]
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !59
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !60
  %524 = add i32 %514, %112, !dbg !61
  %525 = sext i32 %524 to i64, !dbg !62
  %526 = getelementptr i32, ptr addrspace(1) %115, i64 %525, !dbg !62
  %unmaskedload6 = load <1 x i32>, ptr addrspace(1) %526, align 4, !dbg !63
  %527 = extractelement <1 x i32> %unmaskedload6, i64 0, !dbg !63
  %528 = mul i32 %527, %12, !dbg !64
  %529 = add i32 %155, %528, !dbg !65
  %530 = add i32 %156, %528, !dbg !65
  %531 = add i32 %157, %528, !dbg !65
  %532 = add i32 %158, %528, !dbg !65
  %533 = add i32 %159, %528, !dbg !65
  %534 = add i32 %160, %528, !dbg !65
  %535 = add i32 %161, %528, !dbg !65
  %536 = add i32 %162, %528, !dbg !65
  %537 = sext i32 %529 to i64, !dbg !66
  %538 = getelementptr half, ptr addrspace(1) %4, i64 %537, !dbg !66
  %539 = sext i32 %530 to i64, !dbg !66
  %540 = getelementptr half, ptr addrspace(1) %4, i64 %539, !dbg !66
  %541 = sext i32 %531 to i64, !dbg !66
  %542 = getelementptr half, ptr addrspace(1) %4, i64 %541, !dbg !66
  %543 = sext i32 %532 to i64, !dbg !66
  %544 = getelementptr half, ptr addrspace(1) %4, i64 %543, !dbg !66
  %545 = sext i32 %533 to i64, !dbg !66
  %546 = getelementptr half, ptr addrspace(1) %4, i64 %545, !dbg !66
  %547 = sext i32 %534 to i64, !dbg !66
  %548 = getelementptr half, ptr addrspace(1) %4, i64 %547, !dbg !66
  %549 = sext i32 %535 to i64, !dbg !66
  %550 = getelementptr half, ptr addrspace(1) %4, i64 %549, !dbg !66
  %551 = sext i32 %536 to i64, !dbg !66
  %552 = getelementptr half, ptr addrspace(1) %4, i64 %551, !dbg !66
  %unmaskedload7 = load <8 x half>, ptr addrspace(1) %538, align 16, !dbg !67
  %unmaskedload8 = load <8 x half>, ptr addrspace(1) %540, align 16, !dbg !67
  %unmaskedload9 = load <8 x half>, ptr addrspace(1) %542, align 16, !dbg !67
  %unmaskedload10 = load <8 x half>, ptr addrspace(1) %544, align 16, !dbg !67
  %unmaskedload11 = load <8 x half>, ptr addrspace(1) %546, align 16, !dbg !67
  %unmaskedload12 = load <8 x half>, ptr addrspace(1) %548, align 16, !dbg !67
  %unmaskedload13 = load <8 x half>, ptr addrspace(1) %550, align 16, !dbg !67
  %unmaskedload14 = load <8 x half>, ptr addrspace(1) %552, align 16, !dbg !67
  %553 = getelementptr half, ptr addrspace(1) %5, i64 %537, !dbg !68
  %554 = getelementptr half, ptr addrspace(1) %5, i64 %539, !dbg !68
  %555 = getelementptr half, ptr addrspace(1) %5, i64 %541, !dbg !68
  %556 = getelementptr half, ptr addrspace(1) %5, i64 %543, !dbg !68
  %557 = getelementptr half, ptr addrspace(1) %5, i64 %545, !dbg !68
  %558 = getelementptr half, ptr addrspace(1) %5, i64 %547, !dbg !68
  %559 = getelementptr half, ptr addrspace(1) %5, i64 %549, !dbg !68
  %560 = getelementptr half, ptr addrspace(1) %5, i64 %551, !dbg !68
  %unmaskedload15 = load <8 x half>, ptr addrspace(1) %553, align 16, !dbg !69
  %unmaskedload16 = load <8 x half>, ptr addrspace(1) %554, align 16, !dbg !69
  %unmaskedload17 = load <8 x half>, ptr addrspace(1) %555, align 16, !dbg !69
  %unmaskedload18 = load <8 x half>, ptr addrspace(1) %556, align 16, !dbg !69
  %unmaskedload19 = load <8 x half>, ptr addrspace(1) %557, align 16, !dbg !69
  %unmaskedload20 = load <8 x half>, ptr addrspace(1) %558, align 16, !dbg !69
  %unmaskedload21 = load <8 x half>, ptr addrspace(1) %559, align 16, !dbg !69
  %unmaskedload22 = load <8 x half>, ptr addrspace(1) %560, align 16, !dbg !69
  %561 = shl i32 %524, 6, !dbg !70
  %562 = or disjoint i32 %561, %59, !dbg !71
  %563 = or disjoint i32 %561, %60, !dbg !71
  %564 = or disjoint i32 %561, %61, !dbg !71
  %565 = or disjoint i32 %561, %62, !dbg !71
  fence syncscope("workgroup") release, !dbg !60
  tail call void @llvm.amdgcn.s.barrier(), !dbg !60
  fence syncscope("workgroup") acquire, !dbg !60
  store <8 x half> %unmaskedload7, ptr addrspace(3) %166, align 16, !dbg !60
  store <8 x half> %unmaskedload8, ptr addrspace(3) %168, align 16, !dbg !60
  store <8 x half> %unmaskedload9, ptr addrspace(3) %171, align 16, !dbg !60
  store <8 x half> %unmaskedload10, ptr addrspace(3) %174, align 16, !dbg !60
  store <8 x half> %unmaskedload11, ptr addrspace(3) %177, align 16, !dbg !60
  store <8 x half> %unmaskedload12, ptr addrspace(3) %180, align 16, !dbg !60
  store <8 x half> %unmaskedload13, ptr addrspace(3) %183, align 16, !dbg !60
  store <8 x half> %unmaskedload14, ptr addrspace(3) %186, align 16, !dbg !60
  fence syncscope("workgroup") release, !dbg !60
  tail call void @llvm.amdgcn.s.barrier(), !dbg !60
  fence syncscope("workgroup") acquire, !dbg !60
  %566 = load <64 x half>, ptr addrspace(3) %192, align 128, !dbg !60
  %567 = load <64 x half>, ptr addrspace(3) %194, align 128, !dbg !60
  %568 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !60
  %569 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !60
  %570 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !60
  %571 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !60
  %572 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 16, i32 17, i32 18, i32 19>, !dbg !60
  %573 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 20, i32 21, i32 22, i32 23>, !dbg !60
  %574 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 24, i32 25, i32 26, i32 27>, !dbg !60
  %575 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 28, i32 29, i32 30, i32 31>, !dbg !60
  %576 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 32, i32 33, i32 34, i32 35>, !dbg !60
  %577 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 36, i32 37, i32 38, i32 39>, !dbg !60
  %578 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 40, i32 41, i32 42, i32 43>, !dbg !60
  %579 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 44, i32 45, i32 46, i32 47>, !dbg !60
  %580 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 48, i32 49, i32 50, i32 51>, !dbg !60
  %581 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 52, i32 53, i32 54, i32 55>, !dbg !60
  %582 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 56, i32 57, i32 58, i32 59>, !dbg !60
  %583 = shufflevector <64 x half> %566, <64 x half> poison, <4 x i32> <i32 60, i32 61, i32 62, i32 63>, !dbg !60
  %584 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !60
  %585 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !60
  %586 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !60
  %587 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !60
  %588 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 16, i32 17, i32 18, i32 19>, !dbg !60
  %589 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 20, i32 21, i32 22, i32 23>, !dbg !60
  %590 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 24, i32 25, i32 26, i32 27>, !dbg !60
  %591 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 28, i32 29, i32 30, i32 31>, !dbg !60
  %592 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 32, i32 33, i32 34, i32 35>, !dbg !60
  %593 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 36, i32 37, i32 38, i32 39>, !dbg !60
  %594 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 40, i32 41, i32 42, i32 43>, !dbg !60
  %595 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 44, i32 45, i32 46, i32 47>, !dbg !60
  %596 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 48, i32 49, i32 50, i32 51>, !dbg !60
  %597 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 52, i32 53, i32 54, i32 55>, !dbg !60
  %598 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 56, i32 57, i32 58, i32 59>, !dbg !60
  %599 = shufflevector <64 x half> %567, <64 x half> poison, <4 x i32> <i32 60, i32 61, i32 62, i32 63>, !dbg !60
  %600 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %195), !dbg !60
  %601 = insertelement <2 x i32> poison, i32 %600, i64 0, !dbg !60
  %602 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %196), !dbg !60
  %603 = insertelement <2 x i32> %601, i32 %602, i64 1, !dbg !60
  %604 = bitcast <2 x i32> %603 to <4 x half>, !dbg !60
  %605 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %568, <4 x half> %604, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !60
  %606 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %195), !dbg !60
  %607 = insertelement <2 x i32> poison, i32 %606, i64 0, !dbg !60
  %608 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %196), !dbg !60
  %609 = insertelement <2 x i32> %607, i32 %608, i64 1, !dbg !60
  %610 = bitcast <2 x i32> %609 to <4 x half>, !dbg !60
  %611 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %569, <4 x half> %610, <4 x float> %605, i32 0, i32 0, i32 0), !dbg !60
  %612 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %195), !dbg !60
  %613 = insertelement <2 x i32> poison, i32 %612, i64 0, !dbg !60
  %614 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %196), !dbg !60
  %615 = insertelement <2 x i32> %613, i32 %614, i64 1, !dbg !60
  %616 = bitcast <2 x i32> %615 to <4 x half>, !dbg !60
  %617 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %570, <4 x half> %616, <4 x float> %611, i32 0, i32 0, i32 0), !dbg !60
  %618 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %195), !dbg !60
  %619 = insertelement <2 x i32> poison, i32 %618, i64 0, !dbg !60
  %620 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %196), !dbg !60
  %621 = insertelement <2 x i32> %619, i32 %620, i64 1, !dbg !60
  %622 = bitcast <2 x i32> %621 to <4 x half>, !dbg !60
  %623 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %571, <4 x half> %622, <4 x float> %617, i32 0, i32 0, i32 0), !dbg !60
  %624 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %195), !dbg !60
  %625 = insertelement <2 x i32> poison, i32 %624, i64 0, !dbg !60
  %626 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %196), !dbg !60
  %627 = insertelement <2 x i32> %625, i32 %626, i64 1, !dbg !60
  %628 = bitcast <2 x i32> %627 to <4 x half>, !dbg !60
  %629 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %572, <4 x half> %628, <4 x float> %623, i32 0, i32 0, i32 0), !dbg !60
  %630 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %195), !dbg !60
  %631 = insertelement <2 x i32> poison, i32 %630, i64 0, !dbg !60
  %632 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %196), !dbg !60
  %633 = insertelement <2 x i32> %631, i32 %632, i64 1, !dbg !60
  %634 = bitcast <2 x i32> %633 to <4 x half>, !dbg !60
  %635 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %573, <4 x half> %634, <4 x float> %629, i32 0, i32 0, i32 0), !dbg !60
  %636 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %195), !dbg !60
  %637 = insertelement <2 x i32> poison, i32 %636, i64 0, !dbg !60
  %638 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %196), !dbg !60
  %639 = insertelement <2 x i32> %637, i32 %638, i64 1, !dbg !60
  %640 = bitcast <2 x i32> %639 to <4 x half>, !dbg !60
  %641 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %574, <4 x half> %640, <4 x float> %635, i32 0, i32 0, i32 0), !dbg !60
  %642 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %195), !dbg !60
  %643 = insertelement <2 x i32> poison, i32 %642, i64 0, !dbg !60
  %644 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %196), !dbg !60
  %645 = insertelement <2 x i32> %643, i32 %644, i64 1, !dbg !60
  %646 = bitcast <2 x i32> %645 to <4 x half>, !dbg !60
  %647 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %575, <4 x half> %646, <4 x float> %641, i32 0, i32 0, i32 0), !dbg !60
  %648 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %195), !dbg !60
  %649 = insertelement <2 x i32> poison, i32 %648, i64 0, !dbg !60
  %650 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %196), !dbg !60
  %651 = insertelement <2 x i32> %649, i32 %650, i64 1, !dbg !60
  %652 = bitcast <2 x i32> %651 to <4 x half>, !dbg !60
  %653 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %576, <4 x half> %652, <4 x float> %647, i32 0, i32 0, i32 0), !dbg !60
  %654 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %195), !dbg !60
  %655 = insertelement <2 x i32> poison, i32 %654, i64 0, !dbg !60
  %656 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %196), !dbg !60
  %657 = insertelement <2 x i32> %655, i32 %656, i64 1, !dbg !60
  %658 = bitcast <2 x i32> %657 to <4 x half>, !dbg !60
  %659 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %577, <4 x half> %658, <4 x float> %653, i32 0, i32 0, i32 0), !dbg !60
  %660 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %195), !dbg !60
  %661 = insertelement <2 x i32> poison, i32 %660, i64 0, !dbg !60
  %662 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %196), !dbg !60
  %663 = insertelement <2 x i32> %661, i32 %662, i64 1, !dbg !60
  %664 = bitcast <2 x i32> %663 to <4 x half>, !dbg !60
  %665 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %578, <4 x half> %664, <4 x float> %659, i32 0, i32 0, i32 0), !dbg !60
  %666 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %195), !dbg !60
  %667 = insertelement <2 x i32> poison, i32 %666, i64 0, !dbg !60
  %668 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %196), !dbg !60
  %669 = insertelement <2 x i32> %667, i32 %668, i64 1, !dbg !60
  %670 = bitcast <2 x i32> %669 to <4 x half>, !dbg !60
  %671 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %579, <4 x half> %670, <4 x float> %665, i32 0, i32 0, i32 0), !dbg !60
  %672 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %195), !dbg !60
  %673 = insertelement <2 x i32> poison, i32 %672, i64 0, !dbg !60
  %674 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %196), !dbg !60
  %675 = insertelement <2 x i32> %673, i32 %674, i64 1, !dbg !60
  %676 = bitcast <2 x i32> %675 to <4 x half>, !dbg !60
  %677 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %580, <4 x half> %676, <4 x float> %671, i32 0, i32 0, i32 0), !dbg !60
  %678 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %195), !dbg !60
  %679 = insertelement <2 x i32> poison, i32 %678, i64 0, !dbg !60
  %680 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %196), !dbg !60
  %681 = insertelement <2 x i32> %679, i32 %680, i64 1, !dbg !60
  %682 = bitcast <2 x i32> %681 to <4 x half>, !dbg !60
  %683 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %581, <4 x half> %682, <4 x float> %677, i32 0, i32 0, i32 0), !dbg !60
  %684 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %195), !dbg !60
  %685 = insertelement <2 x i32> poison, i32 %684, i64 0, !dbg !60
  %686 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %196), !dbg !60
  %687 = insertelement <2 x i32> %685, i32 %686, i64 1, !dbg !60
  %688 = bitcast <2 x i32> %687 to <4 x half>, !dbg !60
  %689 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %582, <4 x half> %688, <4 x float> %683, i32 0, i32 0, i32 0), !dbg !60
  %690 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %195), !dbg !60
  %691 = insertelement <2 x i32> poison, i32 %690, i64 0, !dbg !60
  %692 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %196), !dbg !60
  %693 = insertelement <2 x i32> %691, i32 %692, i64 1, !dbg !60
  %694 = bitcast <2 x i32> %693 to <4 x half>, !dbg !60
  %695 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %583, <4 x half> %694, <4 x float> %689, i32 0, i32 0, i32 0), !dbg !60
  %696 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %211), !dbg !60
  %697 = insertelement <2 x i32> poison, i32 %696, i64 0, !dbg !60
  %698 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %212), !dbg !60
  %699 = insertelement <2 x i32> %697, i32 %698, i64 1, !dbg !60
  %700 = bitcast <2 x i32> %699 to <4 x half>, !dbg !60
  %701 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %584, <4 x half> %700, <4 x float> %695, i32 0, i32 0, i32 0), !dbg !60
  %702 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %211), !dbg !60
  %703 = insertelement <2 x i32> poison, i32 %702, i64 0, !dbg !60
  %704 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %212), !dbg !60
  %705 = insertelement <2 x i32> %703, i32 %704, i64 1, !dbg !60
  %706 = bitcast <2 x i32> %705 to <4 x half>, !dbg !60
  %707 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %585, <4 x half> %706, <4 x float> %701, i32 0, i32 0, i32 0), !dbg !60
  %708 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %211), !dbg !60
  %709 = insertelement <2 x i32> poison, i32 %708, i64 0, !dbg !60
  %710 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %212), !dbg !60
  %711 = insertelement <2 x i32> %709, i32 %710, i64 1, !dbg !60
  %712 = bitcast <2 x i32> %711 to <4 x half>, !dbg !60
  %713 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %586, <4 x half> %712, <4 x float> %707, i32 0, i32 0, i32 0), !dbg !60
  %714 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %211), !dbg !60
  %715 = insertelement <2 x i32> poison, i32 %714, i64 0, !dbg !60
  %716 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %212), !dbg !60
  %717 = insertelement <2 x i32> %715, i32 %716, i64 1, !dbg !60
  %718 = bitcast <2 x i32> %717 to <4 x half>, !dbg !60
  %719 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %587, <4 x half> %718, <4 x float> %713, i32 0, i32 0, i32 0), !dbg !60
  %720 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %211), !dbg !60
  %721 = insertelement <2 x i32> poison, i32 %720, i64 0, !dbg !60
  %722 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %212), !dbg !60
  %723 = insertelement <2 x i32> %721, i32 %722, i64 1, !dbg !60
  %724 = bitcast <2 x i32> %723 to <4 x half>, !dbg !60
  %725 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %588, <4 x half> %724, <4 x float> %719, i32 0, i32 0, i32 0), !dbg !60
  %726 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %211), !dbg !60
  %727 = insertelement <2 x i32> poison, i32 %726, i64 0, !dbg !60
  %728 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %212), !dbg !60
  %729 = insertelement <2 x i32> %727, i32 %728, i64 1, !dbg !60
  %730 = bitcast <2 x i32> %729 to <4 x half>, !dbg !60
  %731 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %589, <4 x half> %730, <4 x float> %725, i32 0, i32 0, i32 0), !dbg !60
  %732 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %211), !dbg !60
  %733 = insertelement <2 x i32> poison, i32 %732, i64 0, !dbg !60
  %734 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %212), !dbg !60
  %735 = insertelement <2 x i32> %733, i32 %734, i64 1, !dbg !60
  %736 = bitcast <2 x i32> %735 to <4 x half>, !dbg !60
  %737 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %590, <4 x half> %736, <4 x float> %731, i32 0, i32 0, i32 0), !dbg !60
  %738 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %211), !dbg !60
  %739 = insertelement <2 x i32> poison, i32 %738, i64 0, !dbg !60
  %740 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %212), !dbg !60
  %741 = insertelement <2 x i32> %739, i32 %740, i64 1, !dbg !60
  %742 = bitcast <2 x i32> %741 to <4 x half>, !dbg !60
  %743 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %591, <4 x half> %742, <4 x float> %737, i32 0, i32 0, i32 0), !dbg !60
  %744 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %211), !dbg !60
  %745 = insertelement <2 x i32> poison, i32 %744, i64 0, !dbg !60
  %746 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %212), !dbg !60
  %747 = insertelement <2 x i32> %745, i32 %746, i64 1, !dbg !60
  %748 = bitcast <2 x i32> %747 to <4 x half>, !dbg !60
  %749 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %592, <4 x half> %748, <4 x float> %743, i32 0, i32 0, i32 0), !dbg !60
  %750 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %211), !dbg !60
  %751 = insertelement <2 x i32> poison, i32 %750, i64 0, !dbg !60
  %752 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %212), !dbg !60
  %753 = insertelement <2 x i32> %751, i32 %752, i64 1, !dbg !60
  %754 = bitcast <2 x i32> %753 to <4 x half>, !dbg !60
  %755 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %593, <4 x half> %754, <4 x float> %749, i32 0, i32 0, i32 0), !dbg !60
  %756 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %211), !dbg !60
  %757 = insertelement <2 x i32> poison, i32 %756, i64 0, !dbg !60
  %758 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %212), !dbg !60
  %759 = insertelement <2 x i32> %757, i32 %758, i64 1, !dbg !60
  %760 = bitcast <2 x i32> %759 to <4 x half>, !dbg !60
  %761 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %594, <4 x half> %760, <4 x float> %755, i32 0, i32 0, i32 0), !dbg !60
  %762 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %211), !dbg !60
  %763 = insertelement <2 x i32> poison, i32 %762, i64 0, !dbg !60
  %764 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %212), !dbg !60
  %765 = insertelement <2 x i32> %763, i32 %764, i64 1, !dbg !60
  %766 = bitcast <2 x i32> %765 to <4 x half>, !dbg !60
  %767 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %595, <4 x half> %766, <4 x float> %761, i32 0, i32 0, i32 0), !dbg !60
  %768 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %211), !dbg !60
  %769 = insertelement <2 x i32> poison, i32 %768, i64 0, !dbg !60
  %770 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %212), !dbg !60
  %771 = insertelement <2 x i32> %769, i32 %770, i64 1, !dbg !60
  %772 = bitcast <2 x i32> %771 to <4 x half>, !dbg !60
  %773 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %596, <4 x half> %772, <4 x float> %767, i32 0, i32 0, i32 0), !dbg !60
  %774 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %211), !dbg !60
  %775 = insertelement <2 x i32> poison, i32 %774, i64 0, !dbg !60
  %776 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %212), !dbg !60
  %777 = insertelement <2 x i32> %775, i32 %776, i64 1, !dbg !60
  %778 = bitcast <2 x i32> %777 to <4 x half>, !dbg !60
  %779 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %597, <4 x half> %778, <4 x float> %773, i32 0, i32 0, i32 0), !dbg !60
  %780 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %211), !dbg !60
  %781 = insertelement <2 x i32> poison, i32 %780, i64 0, !dbg !60
  %782 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %212), !dbg !60
  %783 = insertelement <2 x i32> %781, i32 %782, i64 1, !dbg !60
  %784 = bitcast <2 x i32> %783 to <4 x half>, !dbg !60
  %785 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %598, <4 x half> %784, <4 x float> %779, i32 0, i32 0, i32 0), !dbg !60
  %786 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %211), !dbg !60
  %787 = insertelement <2 x i32> poison, i32 %786, i64 0, !dbg !60
  %788 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %212), !dbg !60
  %789 = insertelement <2 x i32> %787, i32 %788, i64 1, !dbg !60
  %790 = bitcast <2 x i32> %789 to <4 x half>, !dbg !60
  %791 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %599, <4 x half> %790, <4 x float> %785, i32 0, i32 0, i32 0), !dbg !60
  %792 = extractelement <4 x float> %791, i64 0, !dbg !60
  %793 = extractelement <4 x float> %791, i64 1, !dbg !60
  %794 = extractelement <4 x float> %791, i64 2, !dbg !60
  %795 = extractelement <4 x float> %791, i64 3, !dbg !60
  %796 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %213), !dbg !60
  %797 = insertelement <2 x i32> poison, i32 %796, i64 0, !dbg !60
  %798 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %214), !dbg !60
  %799 = insertelement <2 x i32> %797, i32 %798, i64 1, !dbg !60
  %800 = bitcast <2 x i32> %799 to <4 x half>, !dbg !60
  %801 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %568, <4 x half> %800, <4 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !60
  %802 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %213), !dbg !60
  %803 = insertelement <2 x i32> poison, i32 %802, i64 0, !dbg !60
  %804 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %214), !dbg !60
  %805 = insertelement <2 x i32> %803, i32 %804, i64 1, !dbg !60
  %806 = bitcast <2 x i32> %805 to <4 x half>, !dbg !60
  %807 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %569, <4 x half> %806, <4 x float> %801, i32 0, i32 0, i32 0), !dbg !60
  %808 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %213), !dbg !60
  %809 = insertelement <2 x i32> poison, i32 %808, i64 0, !dbg !60
  %810 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %214), !dbg !60
  %811 = insertelement <2 x i32> %809, i32 %810, i64 1, !dbg !60
  %812 = bitcast <2 x i32> %811 to <4 x half>, !dbg !60
  %813 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %570, <4 x half> %812, <4 x float> %807, i32 0, i32 0, i32 0), !dbg !60
  %814 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %213), !dbg !60
  %815 = insertelement <2 x i32> poison, i32 %814, i64 0, !dbg !60
  %816 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %214), !dbg !60
  %817 = insertelement <2 x i32> %815, i32 %816, i64 1, !dbg !60
  %818 = bitcast <2 x i32> %817 to <4 x half>, !dbg !60
  %819 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %571, <4 x half> %818, <4 x float> %813, i32 0, i32 0, i32 0), !dbg !60
  %820 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %213), !dbg !60
  %821 = insertelement <2 x i32> poison, i32 %820, i64 0, !dbg !60
  %822 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %214), !dbg !60
  %823 = insertelement <2 x i32> %821, i32 %822, i64 1, !dbg !60
  %824 = bitcast <2 x i32> %823 to <4 x half>, !dbg !60
  %825 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %572, <4 x half> %824, <4 x float> %819, i32 0, i32 0, i32 0), !dbg !60
  %826 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %213), !dbg !60
  %827 = insertelement <2 x i32> poison, i32 %826, i64 0, !dbg !60
  %828 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %214), !dbg !60
  %829 = insertelement <2 x i32> %827, i32 %828, i64 1, !dbg !60
  %830 = bitcast <2 x i32> %829 to <4 x half>, !dbg !60
  %831 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %573, <4 x half> %830, <4 x float> %825, i32 0, i32 0, i32 0), !dbg !60
  %832 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %213), !dbg !60
  %833 = insertelement <2 x i32> poison, i32 %832, i64 0, !dbg !60
  %834 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %214), !dbg !60
  %835 = insertelement <2 x i32> %833, i32 %834, i64 1, !dbg !60
  %836 = bitcast <2 x i32> %835 to <4 x half>, !dbg !60
  %837 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %574, <4 x half> %836, <4 x float> %831, i32 0, i32 0, i32 0), !dbg !60
  %838 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %213), !dbg !60
  %839 = insertelement <2 x i32> poison, i32 %838, i64 0, !dbg !60
  %840 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %214), !dbg !60
  %841 = insertelement <2 x i32> %839, i32 %840, i64 1, !dbg !60
  %842 = bitcast <2 x i32> %841 to <4 x half>, !dbg !60
  %843 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %575, <4 x half> %842, <4 x float> %837, i32 0, i32 0, i32 0), !dbg !60
  %844 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %213), !dbg !60
  %845 = insertelement <2 x i32> poison, i32 %844, i64 0, !dbg !60
  %846 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %214), !dbg !60
  %847 = insertelement <2 x i32> %845, i32 %846, i64 1, !dbg !60
  %848 = bitcast <2 x i32> %847 to <4 x half>, !dbg !60
  %849 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %576, <4 x half> %848, <4 x float> %843, i32 0, i32 0, i32 0), !dbg !60
  %850 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %213), !dbg !60
  %851 = insertelement <2 x i32> poison, i32 %850, i64 0, !dbg !60
  %852 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %214), !dbg !60
  %853 = insertelement <2 x i32> %851, i32 %852, i64 1, !dbg !60
  %854 = bitcast <2 x i32> %853 to <4 x half>, !dbg !60
  %855 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %577, <4 x half> %854, <4 x float> %849, i32 0, i32 0, i32 0), !dbg !60
  %856 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %213), !dbg !60
  %857 = insertelement <2 x i32> poison, i32 %856, i64 0, !dbg !60
  %858 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %214), !dbg !60
  %859 = insertelement <2 x i32> %857, i32 %858, i64 1, !dbg !60
  %860 = bitcast <2 x i32> %859 to <4 x half>, !dbg !60
  %861 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %578, <4 x half> %860, <4 x float> %855, i32 0, i32 0, i32 0), !dbg !60
  %862 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %213), !dbg !60
  %863 = insertelement <2 x i32> poison, i32 %862, i64 0, !dbg !60
  %864 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %214), !dbg !60
  %865 = insertelement <2 x i32> %863, i32 %864, i64 1, !dbg !60
  %866 = bitcast <2 x i32> %865 to <4 x half>, !dbg !60
  %867 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %579, <4 x half> %866, <4 x float> %861, i32 0, i32 0, i32 0), !dbg !60
  %868 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %213), !dbg !60
  %869 = insertelement <2 x i32> poison, i32 %868, i64 0, !dbg !60
  %870 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %214), !dbg !60
  %871 = insertelement <2 x i32> %869, i32 %870, i64 1, !dbg !60
  %872 = bitcast <2 x i32> %871 to <4 x half>, !dbg !60
  %873 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %580, <4 x half> %872, <4 x float> %867, i32 0, i32 0, i32 0), !dbg !60
  %874 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %213), !dbg !60
  %875 = insertelement <2 x i32> poison, i32 %874, i64 0, !dbg !60
  %876 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %214), !dbg !60
  %877 = insertelement <2 x i32> %875, i32 %876, i64 1, !dbg !60
  %878 = bitcast <2 x i32> %877 to <4 x half>, !dbg !60
  %879 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %581, <4 x half> %878, <4 x float> %873, i32 0, i32 0, i32 0), !dbg !60
  %880 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %213), !dbg !60
  %881 = insertelement <2 x i32> poison, i32 %880, i64 0, !dbg !60
  %882 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %214), !dbg !60
  %883 = insertelement <2 x i32> %881, i32 %882, i64 1, !dbg !60
  %884 = bitcast <2 x i32> %883 to <4 x half>, !dbg !60
  %885 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %582, <4 x half> %884, <4 x float> %879, i32 0, i32 0, i32 0), !dbg !60
  %886 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %213), !dbg !60
  %887 = insertelement <2 x i32> poison, i32 %886, i64 0, !dbg !60
  %888 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %214), !dbg !60
  %889 = insertelement <2 x i32> %887, i32 %888, i64 1, !dbg !60
  %890 = bitcast <2 x i32> %889 to <4 x half>, !dbg !60
  %891 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %583, <4 x half> %890, <4 x float> %885, i32 0, i32 0, i32 0), !dbg !60
  %892 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %215), !dbg !60
  %893 = insertelement <2 x i32> poison, i32 %892, i64 0, !dbg !60
  %894 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %216), !dbg !60
  %895 = insertelement <2 x i32> %893, i32 %894, i64 1, !dbg !60
  %896 = bitcast <2 x i32> %895 to <4 x half>, !dbg !60
  %897 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %584, <4 x half> %896, <4 x float> %891, i32 0, i32 0, i32 0), !dbg !60
  %898 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %215), !dbg !60
  %899 = insertelement <2 x i32> poison, i32 %898, i64 0, !dbg !60
  %900 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %216), !dbg !60
  %901 = insertelement <2 x i32> %899, i32 %900, i64 1, !dbg !60
  %902 = bitcast <2 x i32> %901 to <4 x half>, !dbg !60
  %903 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %585, <4 x half> %902, <4 x float> %897, i32 0, i32 0, i32 0), !dbg !60
  %904 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %215), !dbg !60
  %905 = insertelement <2 x i32> poison, i32 %904, i64 0, !dbg !60
  %906 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %216), !dbg !60
  %907 = insertelement <2 x i32> %905, i32 %906, i64 1, !dbg !60
  %908 = bitcast <2 x i32> %907 to <4 x half>, !dbg !60
  %909 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %586, <4 x half> %908, <4 x float> %903, i32 0, i32 0, i32 0), !dbg !60
  %910 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %215), !dbg !60
  %911 = insertelement <2 x i32> poison, i32 %910, i64 0, !dbg !60
  %912 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %216), !dbg !60
  %913 = insertelement <2 x i32> %911, i32 %912, i64 1, !dbg !60
  %914 = bitcast <2 x i32> %913 to <4 x half>, !dbg !60
  %915 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %587, <4 x half> %914, <4 x float> %909, i32 0, i32 0, i32 0), !dbg !60
  %916 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %215), !dbg !60
  %917 = insertelement <2 x i32> poison, i32 %916, i64 0, !dbg !60
  %918 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %216), !dbg !60
  %919 = insertelement <2 x i32> %917, i32 %918, i64 1, !dbg !60
  %920 = bitcast <2 x i32> %919 to <4 x half>, !dbg !60
  %921 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %588, <4 x half> %920, <4 x float> %915, i32 0, i32 0, i32 0), !dbg !60
  %922 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %215), !dbg !60
  %923 = insertelement <2 x i32> poison, i32 %922, i64 0, !dbg !60
  %924 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %216), !dbg !60
  %925 = insertelement <2 x i32> %923, i32 %924, i64 1, !dbg !60
  %926 = bitcast <2 x i32> %925 to <4 x half>, !dbg !60
  %927 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %589, <4 x half> %926, <4 x float> %921, i32 0, i32 0, i32 0), !dbg !60
  %928 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %215), !dbg !60
  %929 = insertelement <2 x i32> poison, i32 %928, i64 0, !dbg !60
  %930 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %216), !dbg !60
  %931 = insertelement <2 x i32> %929, i32 %930, i64 1, !dbg !60
  %932 = bitcast <2 x i32> %931 to <4 x half>, !dbg !60
  %933 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %590, <4 x half> %932, <4 x float> %927, i32 0, i32 0, i32 0), !dbg !60
  %934 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %215), !dbg !60
  %935 = insertelement <2 x i32> poison, i32 %934, i64 0, !dbg !60
  %936 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %216), !dbg !60
  %937 = insertelement <2 x i32> %935, i32 %936, i64 1, !dbg !60
  %938 = bitcast <2 x i32> %937 to <4 x half>, !dbg !60
  %939 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %591, <4 x half> %938, <4 x float> %933, i32 0, i32 0, i32 0), !dbg !60
  %940 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %215), !dbg !60
  %941 = insertelement <2 x i32> poison, i32 %940, i64 0, !dbg !60
  %942 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %216), !dbg !60
  %943 = insertelement <2 x i32> %941, i32 %942, i64 1, !dbg !60
  %944 = bitcast <2 x i32> %943 to <4 x half>, !dbg !60
  %945 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %592, <4 x half> %944, <4 x float> %939, i32 0, i32 0, i32 0), !dbg !60
  %946 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %215), !dbg !60
  %947 = insertelement <2 x i32> poison, i32 %946, i64 0, !dbg !60
  %948 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %216), !dbg !60
  %949 = insertelement <2 x i32> %947, i32 %948, i64 1, !dbg !60
  %950 = bitcast <2 x i32> %949 to <4 x half>, !dbg !60
  %951 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %593, <4 x half> %950, <4 x float> %945, i32 0, i32 0, i32 0), !dbg !60
  %952 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %215), !dbg !60
  %953 = insertelement <2 x i32> poison, i32 %952, i64 0, !dbg !60
  %954 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %216), !dbg !60
  %955 = insertelement <2 x i32> %953, i32 %954, i64 1, !dbg !60
  %956 = bitcast <2 x i32> %955 to <4 x half>, !dbg !60
  %957 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %594, <4 x half> %956, <4 x float> %951, i32 0, i32 0, i32 0), !dbg !60
  %958 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %215), !dbg !60
  %959 = insertelement <2 x i32> poison, i32 %958, i64 0, !dbg !60
  %960 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %216), !dbg !60
  %961 = insertelement <2 x i32> %959, i32 %960, i64 1, !dbg !60
  %962 = bitcast <2 x i32> %961 to <4 x half>, !dbg !60
  %963 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %595, <4 x half> %962, <4 x float> %957, i32 0, i32 0, i32 0), !dbg !60
  %964 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %215), !dbg !60
  %965 = insertelement <2 x i32> poison, i32 %964, i64 0, !dbg !60
  %966 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %216), !dbg !60
  %967 = insertelement <2 x i32> %965, i32 %966, i64 1, !dbg !60
  %968 = bitcast <2 x i32> %967 to <4 x half>, !dbg !60
  %969 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %596, <4 x half> %968, <4 x float> %963, i32 0, i32 0, i32 0), !dbg !60
  %970 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %215), !dbg !60
  %971 = insertelement <2 x i32> poison, i32 %970, i64 0, !dbg !60
  %972 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %216), !dbg !60
  %973 = insertelement <2 x i32> %971, i32 %972, i64 1, !dbg !60
  %974 = bitcast <2 x i32> %973 to <4 x half>, !dbg !60
  %975 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %597, <4 x half> %974, <4 x float> %969, i32 0, i32 0, i32 0), !dbg !60
  %976 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %215), !dbg !60
  %977 = insertelement <2 x i32> poison, i32 %976, i64 0, !dbg !60
  %978 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %216), !dbg !60
  %979 = insertelement <2 x i32> %977, i32 %978, i64 1, !dbg !60
  %980 = bitcast <2 x i32> %979 to <4 x half>, !dbg !60
  %981 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %598, <4 x half> %980, <4 x float> %975, i32 0, i32 0, i32 0), !dbg !60
  %982 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %215), !dbg !60
  %983 = insertelement <2 x i32> poison, i32 %982, i64 0, !dbg !60
  %984 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %216), !dbg !60
  %985 = insertelement <2 x i32> %983, i32 %984, i64 1, !dbg !60
  %986 = bitcast <2 x i32> %985 to <4 x half>, !dbg !60
  %987 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %599, <4 x half> %986, <4 x float> %981, i32 0, i32 0, i32 0), !dbg !60
  %988 = extractelement <4 x float> %987, i64 0, !dbg !60
  %989 = extractelement <4 x float> %987, i64 1, !dbg !60
  %990 = extractelement <4 x float> %987, i64 2, !dbg !60
  %991 = extractelement <4 x float> %987, i64 3, !dbg !60
  %992 = icmp slt i32 %562, %23, !dbg !72
  %993 = icmp slt i32 %563, %23, !dbg !72
  %994 = icmp slt i32 %564, %23, !dbg !72
  %995 = icmp slt i32 %565, %23, !dbg !72
  %996 = select i1 %992, float %792, float 0xFFF0000000000000, !dbg !73
  %997 = select i1 %993, float %793, float 0xFFF0000000000000, !dbg !73
  %998 = select i1 %994, float %794, float 0xFFF0000000000000, !dbg !73
  %999 = select i1 %995, float %795, float 0xFFF0000000000000, !dbg !73
  %1000 = select i1 %992, float %988, float 0xFFF0000000000000, !dbg !73
  %1001 = select i1 %993, float %989, float 0xFFF0000000000000, !dbg !73
  %1002 = select i1 %994, float %990, float 0xFFF0000000000000, !dbg !73
  %1003 = select i1 %995, float %991, float 0xFFF0000000000000, !dbg !73
  %1004 = tail call float @llvm.maxnum.f32(float %996, float %997), !dbg !74
  %1005 = tail call float @llvm.maxnum.f32(float %1004, float %998), !dbg !74
  %1006 = tail call float @llvm.maxnum.f32(float %1005, float %999), !dbg !74
  %1007 = tail call float @llvm.maxnum.f32(float %1000, float %1001), !dbg !74
  %1008 = tail call float @llvm.maxnum.f32(float %1007, float %1002), !dbg !74
  %1009 = tail call float @llvm.maxnum.f32(float %1008, float %1003), !dbg !74
  %1010 = bitcast float %1006 to i32, !dbg !77
  %1011 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %217, i32 %1010), !dbg !77
  %1012 = bitcast i32 %1011 to float, !dbg !77
  %1013 = tail call float @llvm.maxnum.f32(float %1006, float %1012), !dbg !74
  %1014 = bitcast float %1013 to i32, !dbg !77
  %1015 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1014, i32 16415), !dbg !77
  %1016 = bitcast i32 %1015 to float, !dbg !77
  %1017 = tail call float @llvm.maxnum.f32(float %1013, float %1016), !dbg !74
  %1018 = bitcast float %1017 to i32, !dbg !77
  %1019 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1018, i32 8223), !dbg !77
  %1020 = bitcast i32 %1019 to float, !dbg !77
  %1021 = tail call float @llvm.maxnum.f32(float %1017, float %1020), !dbg !74
  %1022 = bitcast float %1021 to i32, !dbg !77
  %1023 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1022, i32 4127), !dbg !77
  %1024 = bitcast i32 %1023 to float, !dbg !77
  %1025 = tail call float @llvm.maxnum.f32(float %1021, float %1024), !dbg !74
  %1026 = bitcast float %1009 to i32, !dbg !77
  %1027 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %217, i32 %1026), !dbg !77
  %1028 = bitcast i32 %1027 to float, !dbg !77
  %1029 = tail call float @llvm.maxnum.f32(float %1009, float %1028), !dbg !74
  %1030 = bitcast float %1029 to i32, !dbg !77
  %1031 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1030, i32 16415), !dbg !77
  %1032 = bitcast i32 %1031 to float, !dbg !77
  %1033 = tail call float @llvm.maxnum.f32(float %1029, float %1032), !dbg !74
  %1034 = bitcast float %1033 to i32, !dbg !77
  %1035 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1034, i32 8223), !dbg !77
  %1036 = bitcast i32 %1035 to float, !dbg !77
  %1037 = tail call float @llvm.maxnum.f32(float %1033, float %1036), !dbg !74
  %1038 = bitcast float %1037 to i32, !dbg !77
  %1039 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1038, i32 4127), !dbg !77
  %1040 = bitcast i32 %1039 to float, !dbg !77
  %1041 = tail call float @llvm.maxnum.f32(float %1037, float %1040), !dbg !74
  %1042 = tail call float @llvm.maxnum.f32(float %512, float %1025), !dbg !78
  %1043 = tail call float @llvm.maxnum.f32(float %513, float %1041), !dbg !78
  %1044 = fsub float %996, %1042, !dbg !79
  %1045 = fsub float %997, %1042, !dbg !79
  %1046 = fsub float %998, %1042, !dbg !79
  %1047 = fsub float %999, %1042, !dbg !79
  %1048 = fsub float %1000, %1043, !dbg !79
  %1049 = fsub float %1001, %1043, !dbg !79
  %1050 = fsub float %1002, %1043, !dbg !79
  %1051 = fsub float %1003, %1043, !dbg !79
  %1052 = tail call float @llvm.amdgcn.exp2.f32(float %1044), !dbg !80
  %1053 = tail call float @llvm.amdgcn.exp2.f32(float %1045), !dbg !80
  %1054 = tail call float @llvm.amdgcn.exp2.f32(float %1046), !dbg !80
  %1055 = tail call float @llvm.amdgcn.exp2.f32(float %1047), !dbg !80
  %1056 = tail call float @llvm.amdgcn.exp2.f32(float %1048), !dbg !80
  %1057 = tail call float @llvm.amdgcn.exp2.f32(float %1049), !dbg !80
  %1058 = tail call float @llvm.amdgcn.exp2.f32(float %1050), !dbg !80
  %1059 = tail call float @llvm.amdgcn.exp2.f32(float %1051), !dbg !80
  %1060 = fsub float %512, %1042, !dbg !81
  %1061 = fsub float %513, %1043, !dbg !81
  %1062 = tail call float @llvm.amdgcn.exp2.f32(float %1060), !dbg !82
  %1063 = tail call float @llvm.amdgcn.exp2.f32(float %1061), !dbg !82
  %1064 = insertelement <2 x float> poison, float %1062, i64 0, !dbg !83
  %1065 = insertelement <2 x float> poison, float %1063, i64 0, !dbg !83
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %1066 = shufflevector <2 x float> %522, <2 x float> %523, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  %1067 = shufflevector <2 x float> %1064, <2 x float> poison, <4 x i32> zeroinitializer, !dbg !59
  %1068 = fmul <4 x float> %1066, %1067, !dbg !59
  %1069 = shufflevector <2 x float> %520, <2 x float> %521, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  %1070 = shufflevector <2 x float> %1064, <2 x float> poison, <4 x i32> zeroinitializer, !dbg !59
  %1071 = fmul <4 x float> %1069, %1070, !dbg !59
  %1072 = shufflevector <2 x float> %518, <2 x float> %519, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  %1073 = shufflevector <2 x float> %1065, <2 x float> poison, <4 x i32> zeroinitializer, !dbg !59
  %1074 = fmul <4 x float> %1072, %1073, !dbg !59
  %1075 = shufflevector <2 x float> %516, <2 x float> %517, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  %1076 = shufflevector <2 x float> %1065, <2 x float> poison, <4 x i32> zeroinitializer, !dbg !59
  %1077 = fmul <4 x float> %1075, %1076, !dbg !59
  %1078 = insertelement <2 x float> poison, float %1056, i64 0, !dbg !84
  %1079 = insertelement <2 x float> %1078, float %1052, i64 1, !dbg !84
  %1080 = fptrunc <2 x float> %1079 to <2 x half>, !dbg !84
  %1081 = insertelement <2 x float> poison, float %1057, i64 0, !dbg !84
  %1082 = insertelement <2 x float> %1081, float %1053, i64 1, !dbg !84
  %1083 = fptrunc <2 x float> %1082 to <2 x half>, !dbg !84
  %1084 = insertelement <2 x float> poison, float %1058, i64 0, !dbg !84
  %1085 = insertelement <2 x float> %1084, float %1054, i64 1, !dbg !84
  %1086 = fptrunc <2 x float> %1085 to <2 x half>, !dbg !84
  %1087 = insertelement <2 x float> poison, float %1059, i64 0, !dbg !84
  %1088 = insertelement <2 x float> %1087, float %1055, i64 1, !dbg !84
  %1089 = fptrunc <2 x float> %1088 to <2 x half>, !dbg !84
  %1090 = shufflevector <2 x half> %1080, <2 x half> poison, <1 x i32> <i32 1>, !dbg !84
  store <1 x half> %1090, ptr addrspace(3) %222, align 8, !dbg !84
  %1091 = shufflevector <2 x half> %1083, <2 x half> poison, <1 x i32> <i32 1>, !dbg !84
  store <1 x half> %1091, ptr addrspace(3) %223, align 2, !dbg !84
  %1092 = shufflevector <2 x half> %1086, <2 x half> poison, <1 x i32> <i32 1>, !dbg !84
  store <1 x half> %1092, ptr addrspace(3) %224, align 4, !dbg !84
  %1093 = shufflevector <2 x half> %1089, <2 x half> poison, <1 x i32> <i32 1>, !dbg !84
  store <1 x half> %1093, ptr addrspace(3) %225, align 2, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %1094 = load <4 x half>, ptr addrspace(3) %229, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %1095 = shufflevector <2 x half> %1080, <2 x half> poison, <1 x i32> zeroinitializer, !dbg !84
  store <1 x half> %1095, ptr addrspace(3) %222, align 8, !dbg !84
  %1096 = shufflevector <2 x half> %1083, <2 x half> poison, <1 x i32> zeroinitializer, !dbg !84
  store <1 x half> %1096, ptr addrspace(3) %223, align 2, !dbg !84
  %1097 = shufflevector <2 x half> %1086, <2 x half> poison, <1 x i32> zeroinitializer, !dbg !84
  store <1 x half> %1097, ptr addrspace(3) %224, align 4, !dbg !84
  %1098 = shufflevector <2 x half> %1089, <2 x half> poison, <1 x i32> zeroinitializer, !dbg !84
  store <1 x half> %1098, ptr addrspace(3) %225, align 2, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %1099 = load <4 x half>, ptr addrspace(3) %229, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  store <4 x half> %1094, ptr addrspace(3) %234, align 8, !dbg !84
  store <4 x half> %1099, ptr addrspace(3) %237, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !84
  tail call void @llvm.amdgcn.s.barrier(), !dbg !84
  fence syncscope("workgroup") acquire, !dbg !84
  %1100 = load <2 x i32>, ptr addrspace(3) %238, align 8, !dbg !84
  %1101 = load <2 x i32>, ptr addrspace(3) %239, align 8, !dbg !84
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  store <8 x half> %unmaskedload15, ptr addrspace(3) %241, align 16, !dbg !69
  store <8 x half> %unmaskedload16, ptr addrspace(3) %243, align 16, !dbg !69
  store <8 x half> %unmaskedload17, ptr addrspace(3) %245, align 16, !dbg !69
  store <8 x half> %unmaskedload18, ptr addrspace(3) %247, align 16, !dbg !69
  store <8 x half> %unmaskedload19, ptr addrspace(3) %249, align 16, !dbg !69
  store <8 x half> %unmaskedload20, ptr addrspace(3) %251, align 16, !dbg !69
  store <8 x half> %unmaskedload21, ptr addrspace(3) %253, align 16, !dbg !69
  store <8 x half> %unmaskedload22, ptr addrspace(3) %255, align 16, !dbg !69
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %1102 = load <1 x half>, ptr addrspace(3) %256, align 2, !dbg !69
  %1103 = load <1 x half>, ptr addrspace(3) %258, align 2, !dbg !69
  %1104 = load <1 x half>, ptr addrspace(3) %260, align 2, !dbg !69
  %1105 = shufflevector <1 x half> %1104, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1106 = load <1 x half>, ptr addrspace(3) %262, align 2, !dbg !69
  %1107 = shufflevector <1 x half> %1106, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1108 = load <1 x half>, ptr addrspace(3) %264, align 2, !dbg !69
  %1109 = load <1 x half>, ptr addrspace(3) %266, align 2, !dbg !69
  %1110 = load <1 x half>, ptr addrspace(3) %268, align 2, !dbg !69
  %1111 = shufflevector <1 x half> %1110, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1112 = load <1 x half>, ptr addrspace(3) %270, align 2, !dbg !69
  %1113 = shufflevector <1 x half> %1112, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1114 = load <1 x half>, ptr addrspace(3) %272, align 2, !dbg !69
  %1115 = load <1 x half>, ptr addrspace(3) %274, align 2, !dbg !69
  %1116 = load <1 x half>, ptr addrspace(3) %276, align 2, !dbg !69
  %1117 = shufflevector <1 x half> %1116, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1118 = load <1 x half>, ptr addrspace(3) %278, align 2, !dbg !69
  %1119 = shufflevector <1 x half> %1118, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1120 = load <1 x half>, ptr addrspace(3) %280, align 2, !dbg !69
  %1121 = load <1 x half>, ptr addrspace(3) %282, align 2, !dbg !69
  %1122 = load <1 x half>, ptr addrspace(3) %284, align 2, !dbg !69
  %1123 = shufflevector <1 x half> %1122, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1124 = load <1 x half>, ptr addrspace(3) %286, align 2, !dbg !69
  %1125 = shufflevector <1 x half> %1124, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1126 = load <1 x half>, ptr addrspace(3) %288, align 2, !dbg !69
  %1127 = load <1 x half>, ptr addrspace(3) %290, align 2, !dbg !69
  %1128 = load <1 x half>, ptr addrspace(3) %292, align 2, !dbg !69
  %1129 = shufflevector <1 x half> %1128, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1130 = load <1 x half>, ptr addrspace(3) %294, align 2, !dbg !69
  %1131 = shufflevector <1 x half> %1130, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1132 = load <1 x half>, ptr addrspace(3) %296, align 2, !dbg !69
  %1133 = load <1 x half>, ptr addrspace(3) %298, align 2, !dbg !69
  %1134 = load <1 x half>, ptr addrspace(3) %300, align 2, !dbg !69
  %1135 = shufflevector <1 x half> %1134, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1136 = load <1 x half>, ptr addrspace(3) %302, align 2, !dbg !69
  %1137 = shufflevector <1 x half> %1136, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1138 = load <1 x half>, ptr addrspace(3) %304, align 2, !dbg !69
  %1139 = load <1 x half>, ptr addrspace(3) %306, align 2, !dbg !69
  %1140 = load <1 x half>, ptr addrspace(3) %308, align 2, !dbg !69
  %1141 = shufflevector <1 x half> %1140, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1142 = load <1 x half>, ptr addrspace(3) %310, align 2, !dbg !69
  %1143 = shufflevector <1 x half> %1142, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1144 = load <1 x half>, ptr addrspace(3) %312, align 2, !dbg !69
  %1145 = load <1 x half>, ptr addrspace(3) %314, align 2, !dbg !69
  %1146 = load <1 x half>, ptr addrspace(3) %316, align 2, !dbg !69
  %1147 = shufflevector <1 x half> %1146, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1148 = load <1 x half>, ptr addrspace(3) %318, align 2, !dbg !69
  %1149 = shufflevector <1 x half> %1148, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1150 = load <1 x half>, ptr addrspace(3) %320, align 2, !dbg !69
  %1151 = load <1 x half>, ptr addrspace(3) %322, align 2, !dbg !69
  %1152 = load <1 x half>, ptr addrspace(3) %324, align 2, !dbg !69
  %1153 = shufflevector <1 x half> %1152, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1154 = load <1 x half>, ptr addrspace(3) %326, align 2, !dbg !69
  %1155 = shufflevector <1 x half> %1154, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1156 = load <1 x half>, ptr addrspace(3) %328, align 2, !dbg !69
  %1157 = load <1 x half>, ptr addrspace(3) %330, align 2, !dbg !69
  %1158 = load <1 x half>, ptr addrspace(3) %332, align 2, !dbg !69
  %1159 = shufflevector <1 x half> %1158, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1160 = load <1 x half>, ptr addrspace(3) %334, align 2, !dbg !69
  %1161 = shufflevector <1 x half> %1160, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1162 = load <1 x half>, ptr addrspace(3) %336, align 2, !dbg !69
  %1163 = load <1 x half>, ptr addrspace(3) %338, align 2, !dbg !69
  %1164 = load <1 x half>, ptr addrspace(3) %340, align 2, !dbg !69
  %1165 = shufflevector <1 x half> %1164, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1166 = load <1 x half>, ptr addrspace(3) %342, align 2, !dbg !69
  %1167 = shufflevector <1 x half> %1166, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1168 = load <1 x half>, ptr addrspace(3) %344, align 2, !dbg !69
  %1169 = load <1 x half>, ptr addrspace(3) %346, align 2, !dbg !69
  %1170 = load <1 x half>, ptr addrspace(3) %348, align 2, !dbg !69
  %1171 = shufflevector <1 x half> %1170, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1172 = load <1 x half>, ptr addrspace(3) %350, align 2, !dbg !69
  %1173 = shufflevector <1 x half> %1172, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1174 = load <1 x half>, ptr addrspace(3) %352, align 2, !dbg !69
  %1175 = load <1 x half>, ptr addrspace(3) %354, align 2, !dbg !69
  %1176 = load <1 x half>, ptr addrspace(3) %356, align 2, !dbg !69
  %1177 = shufflevector <1 x half> %1176, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1178 = load <1 x half>, ptr addrspace(3) %358, align 2, !dbg !69
  %1179 = shufflevector <1 x half> %1178, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1180 = load <1 x half>, ptr addrspace(3) %360, align 2, !dbg !69
  %1181 = load <1 x half>, ptr addrspace(3) %362, align 2, !dbg !69
  %1182 = load <1 x half>, ptr addrspace(3) %364, align 2, !dbg !69
  %1183 = shufflevector <1 x half> %1182, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1184 = load <1 x half>, ptr addrspace(3) %366, align 2, !dbg !69
  %1185 = shufflevector <1 x half> %1184, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1186 = load <1 x half>, ptr addrspace(3) %368, align 2, !dbg !69
  %1187 = load <1 x half>, ptr addrspace(3) %370, align 2, !dbg !69
  %1188 = load <1 x half>, ptr addrspace(3) %372, align 2, !dbg !69
  %1189 = shufflevector <1 x half> %1188, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1190 = load <1 x half>, ptr addrspace(3) %374, align 2, !dbg !69
  %1191 = shufflevector <1 x half> %1190, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1192 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !69
  %1193 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !69
  %1194 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !69
  %1195 = shufflevector <1 x half> %1194, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1196 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !69
  %1197 = shufflevector <1 x half> %1196, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1198 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !69
  %1199 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !69
  %1200 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !69
  %1201 = shufflevector <1 x half> %1200, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1202 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !69
  %1203 = shufflevector <1 x half> %1202, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1204 = load <1 x half>, ptr addrspace(3) %392, align 2, !dbg !69
  %1205 = load <1 x half>, ptr addrspace(3) %394, align 2, !dbg !69
  %1206 = load <1 x half>, ptr addrspace(3) %396, align 2, !dbg !69
  %1207 = shufflevector <1 x half> %1206, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1208 = load <1 x half>, ptr addrspace(3) %398, align 2, !dbg !69
  %1209 = shufflevector <1 x half> %1208, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1210 = load <1 x half>, ptr addrspace(3) %400, align 2, !dbg !69
  %1211 = load <1 x half>, ptr addrspace(3) %402, align 2, !dbg !69
  %1212 = load <1 x half>, ptr addrspace(3) %404, align 2, !dbg !69
  %1213 = shufflevector <1 x half> %1212, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1214 = load <1 x half>, ptr addrspace(3) %406, align 2, !dbg !69
  %1215 = shufflevector <1 x half> %1214, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1216 = load <1 x half>, ptr addrspace(3) %408, align 2, !dbg !69
  %1217 = load <1 x half>, ptr addrspace(3) %410, align 2, !dbg !69
  %1218 = load <1 x half>, ptr addrspace(3) %412, align 2, !dbg !69
  %1219 = shufflevector <1 x half> %1218, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1220 = load <1 x half>, ptr addrspace(3) %414, align 2, !dbg !69
  %1221 = shufflevector <1 x half> %1220, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1222 = load <1 x half>, ptr addrspace(3) %416, align 2, !dbg !69
  %1223 = load <1 x half>, ptr addrspace(3) %418, align 2, !dbg !69
  %1224 = load <1 x half>, ptr addrspace(3) %420, align 2, !dbg !69
  %1225 = shufflevector <1 x half> %1224, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1226 = load <1 x half>, ptr addrspace(3) %422, align 2, !dbg !69
  %1227 = shufflevector <1 x half> %1226, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1228 = load <1 x half>, ptr addrspace(3) %424, align 2, !dbg !69
  %1229 = load <1 x half>, ptr addrspace(3) %426, align 2, !dbg !69
  %1230 = load <1 x half>, ptr addrspace(3) %428, align 2, !dbg !69
  %1231 = shufflevector <1 x half> %1230, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1232 = load <1 x half>, ptr addrspace(3) %430, align 2, !dbg !69
  %1233 = shufflevector <1 x half> %1232, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1234 = load <1 x half>, ptr addrspace(3) %432, align 2, !dbg !69
  %1235 = load <1 x half>, ptr addrspace(3) %434, align 2, !dbg !69
  %1236 = load <1 x half>, ptr addrspace(3) %436, align 2, !dbg !69
  %1237 = shufflevector <1 x half> %1236, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1238 = load <1 x half>, ptr addrspace(3) %438, align 2, !dbg !69
  %1239 = shufflevector <1 x half> %1238, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1240 = load <1 x half>, ptr addrspace(3) %440, align 2, !dbg !69
  %1241 = load <1 x half>, ptr addrspace(3) %442, align 2, !dbg !69
  %1242 = load <1 x half>, ptr addrspace(3) %444, align 2, !dbg !69
  %1243 = shufflevector <1 x half> %1242, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1244 = load <1 x half>, ptr addrspace(3) %446, align 2, !dbg !69
  %1245 = shufflevector <1 x half> %1244, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1246 = load <1 x half>, ptr addrspace(3) %448, align 2, !dbg !69
  %1247 = load <1 x half>, ptr addrspace(3) %450, align 2, !dbg !69
  %1248 = load <1 x half>, ptr addrspace(3) %452, align 2, !dbg !69
  %1249 = shufflevector <1 x half> %1248, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1250 = load <1 x half>, ptr addrspace(3) %454, align 2, !dbg !69
  %1251 = shufflevector <1 x half> %1250, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1252 = load <1 x half>, ptr addrspace(3) %456, align 2, !dbg !69
  %1253 = load <1 x half>, ptr addrspace(3) %458, align 2, !dbg !69
  %1254 = load <1 x half>, ptr addrspace(3) %460, align 2, !dbg !69
  %1255 = shufflevector <1 x half> %1254, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1256 = load <1 x half>, ptr addrspace(3) %462, align 2, !dbg !69
  %1257 = shufflevector <1 x half> %1256, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1258 = load <1 x half>, ptr addrspace(3) %464, align 2, !dbg !69
  %1259 = load <1 x half>, ptr addrspace(3) %466, align 2, !dbg !69
  %1260 = load <1 x half>, ptr addrspace(3) %468, align 2, !dbg !69
  %1261 = shufflevector <1 x half> %1260, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1262 = load <1 x half>, ptr addrspace(3) %470, align 2, !dbg !69
  %1263 = shufflevector <1 x half> %1262, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1264 = load <1 x half>, ptr addrspace(3) %472, align 2, !dbg !69
  %1265 = load <1 x half>, ptr addrspace(3) %474, align 2, !dbg !69
  %1266 = load <1 x half>, ptr addrspace(3) %476, align 2, !dbg !69
  %1267 = shufflevector <1 x half> %1266, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1268 = load <1 x half>, ptr addrspace(3) %478, align 2, !dbg !69
  %1269 = shufflevector <1 x half> %1268, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1270 = load <1 x half>, ptr addrspace(3) %480, align 2, !dbg !69
  %1271 = load <1 x half>, ptr addrspace(3) %482, align 2, !dbg !69
  %1272 = load <1 x half>, ptr addrspace(3) %484, align 2, !dbg !69
  %1273 = shufflevector <1 x half> %1272, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1274 = load <1 x half>, ptr addrspace(3) %486, align 2, !dbg !69
  %1275 = shufflevector <1 x half> %1274, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1276 = load <1 x half>, ptr addrspace(3) %488, align 2, !dbg !69
  %1277 = load <1 x half>, ptr addrspace(3) %490, align 2, !dbg !69
  %1278 = load <1 x half>, ptr addrspace(3) %492, align 2, !dbg !69
  %1279 = shufflevector <1 x half> %1278, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1280 = load <1 x half>, ptr addrspace(3) %494, align 2, !dbg !69
  %1281 = shufflevector <1 x half> %1280, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1282 = load <1 x half>, ptr addrspace(3) %496, align 2, !dbg !69
  %1283 = load <1 x half>, ptr addrspace(3) %498, align 2, !dbg !69
  %1284 = load <1 x half>, ptr addrspace(3) %500, align 2, !dbg !69
  %1285 = shufflevector <1 x half> %1284, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1286 = load <1 x half>, ptr addrspace(3) %502, align 2, !dbg !69
  %1287 = shufflevector <1 x half> %1286, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1288 = load <1 x half>, ptr addrspace(3) %504, align 2, !dbg !69
  %1289 = load <1 x half>, ptr addrspace(3) %506, align 2, !dbg !69
  %1290 = load <1 x half>, ptr addrspace(3) %508, align 2, !dbg !69
  %1291 = shufflevector <1 x half> %1290, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1292 = load <1 x half>, ptr addrspace(3) %510, align 2, !dbg !69
  %1293 = shufflevector <1 x half> %1292, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1294 = shufflevector <1 x half> %1102, <1 x half> %1103, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1295 = shufflevector <4 x half> %1294, <4 x half> %1105, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1296 = shufflevector <4 x half> %1295, <4 x half> %1107, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1297 = shufflevector <1 x half> %1108, <1 x half> %1109, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1298 = shufflevector <4 x half> %1297, <4 x half> %1111, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1299 = shufflevector <4 x half> %1298, <4 x half> %1113, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1300 = shufflevector <1 x half> %1114, <1 x half> %1115, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1301 = shufflevector <4 x half> %1300, <4 x half> %1117, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1302 = shufflevector <4 x half> %1301, <4 x half> %1119, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1303 = shufflevector <1 x half> %1120, <1 x half> %1121, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1304 = shufflevector <4 x half> %1303, <4 x half> %1123, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1305 = shufflevector <4 x half> %1304, <4 x half> %1125, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1306 = shufflevector <1 x half> %1126, <1 x half> %1127, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1307 = shufflevector <4 x half> %1306, <4 x half> %1129, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1308 = shufflevector <4 x half> %1307, <4 x half> %1131, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1309 = shufflevector <1 x half> %1132, <1 x half> %1133, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1310 = shufflevector <4 x half> %1309, <4 x half> %1135, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1311 = shufflevector <4 x half> %1310, <4 x half> %1137, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1312 = shufflevector <1 x half> %1138, <1 x half> %1139, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1313 = shufflevector <4 x half> %1312, <4 x half> %1141, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1314 = shufflevector <4 x half> %1313, <4 x half> %1143, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1315 = shufflevector <1 x half> %1144, <1 x half> %1145, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1316 = shufflevector <4 x half> %1315, <4 x half> %1147, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1317 = shufflevector <4 x half> %1316, <4 x half> %1149, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1318 = shufflevector <1 x half> %1150, <1 x half> %1151, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1319 = shufflevector <4 x half> %1318, <4 x half> %1153, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1320 = shufflevector <4 x half> %1319, <4 x half> %1155, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1321 = shufflevector <1 x half> %1156, <1 x half> %1157, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1322 = shufflevector <4 x half> %1321, <4 x half> %1159, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1323 = shufflevector <4 x half> %1322, <4 x half> %1161, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1324 = shufflevector <1 x half> %1162, <1 x half> %1163, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1325 = shufflevector <4 x half> %1324, <4 x half> %1165, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1326 = shufflevector <4 x half> %1325, <4 x half> %1167, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1327 = shufflevector <1 x half> %1168, <1 x half> %1169, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1328 = shufflevector <4 x half> %1327, <4 x half> %1171, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1329 = shufflevector <4 x half> %1328, <4 x half> %1173, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1330 = shufflevector <1 x half> %1174, <1 x half> %1175, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1331 = shufflevector <4 x half> %1330, <4 x half> %1177, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1332 = shufflevector <4 x half> %1331, <4 x half> %1179, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1333 = shufflevector <1 x half> %1180, <1 x half> %1181, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1334 = shufflevector <4 x half> %1333, <4 x half> %1183, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1335 = shufflevector <4 x half> %1334, <4 x half> %1185, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1336 = shufflevector <1 x half> %1186, <1 x half> %1187, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1337 = shufflevector <4 x half> %1336, <4 x half> %1189, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1338 = shufflevector <4 x half> %1337, <4 x half> %1191, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1339 = shufflevector <1 x half> %1192, <1 x half> %1193, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1340 = shufflevector <4 x half> %1339, <4 x half> %1195, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1341 = shufflevector <4 x half> %1340, <4 x half> %1197, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1342 = shufflevector <1 x half> %1198, <1 x half> %1199, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1343 = shufflevector <4 x half> %1342, <4 x half> %1201, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1344 = shufflevector <4 x half> %1343, <4 x half> %1203, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1345 = shufflevector <1 x half> %1204, <1 x half> %1205, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1346 = shufflevector <4 x half> %1345, <4 x half> %1207, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1347 = shufflevector <4 x half> %1346, <4 x half> %1209, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1348 = shufflevector <1 x half> %1210, <1 x half> %1211, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1349 = shufflevector <4 x half> %1348, <4 x half> %1213, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1350 = shufflevector <4 x half> %1349, <4 x half> %1215, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1351 = shufflevector <1 x half> %1216, <1 x half> %1217, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1352 = shufflevector <4 x half> %1351, <4 x half> %1219, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1353 = shufflevector <4 x half> %1352, <4 x half> %1221, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1354 = shufflevector <1 x half> %1222, <1 x half> %1223, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1355 = shufflevector <4 x half> %1354, <4 x half> %1225, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1356 = shufflevector <4 x half> %1355, <4 x half> %1227, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1357 = shufflevector <1 x half> %1228, <1 x half> %1229, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1358 = shufflevector <4 x half> %1357, <4 x half> %1231, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1359 = shufflevector <4 x half> %1358, <4 x half> %1233, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1360 = shufflevector <1 x half> %1234, <1 x half> %1235, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1361 = shufflevector <4 x half> %1360, <4 x half> %1237, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1362 = shufflevector <4 x half> %1361, <4 x half> %1239, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1363 = shufflevector <1 x half> %1240, <1 x half> %1241, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1364 = shufflevector <4 x half> %1363, <4 x half> %1243, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1365 = shufflevector <4 x half> %1364, <4 x half> %1245, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1366 = shufflevector <1 x half> %1246, <1 x half> %1247, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1367 = shufflevector <4 x half> %1366, <4 x half> %1249, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1368 = shufflevector <4 x half> %1367, <4 x half> %1251, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1369 = shufflevector <1 x half> %1252, <1 x half> %1253, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1370 = shufflevector <4 x half> %1369, <4 x half> %1255, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1371 = shufflevector <4 x half> %1370, <4 x half> %1257, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1372 = shufflevector <1 x half> %1258, <1 x half> %1259, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1373 = shufflevector <4 x half> %1372, <4 x half> %1261, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1374 = shufflevector <4 x half> %1373, <4 x half> %1263, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1375 = shufflevector <1 x half> %1264, <1 x half> %1265, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1376 = shufflevector <4 x half> %1375, <4 x half> %1267, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1377 = shufflevector <4 x half> %1376, <4 x half> %1269, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1378 = shufflevector <1 x half> %1270, <1 x half> %1271, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1379 = shufflevector <4 x half> %1378, <4 x half> %1273, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1380 = shufflevector <4 x half> %1379, <4 x half> %1275, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1381 = shufflevector <1 x half> %1276, <1 x half> %1277, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1382 = shufflevector <4 x half> %1381, <4 x half> %1279, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1383 = shufflevector <4 x half> %1382, <4 x half> %1281, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1384 = shufflevector <1 x half> %1282, <1 x half> %1283, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1385 = shufflevector <4 x half> %1384, <4 x half> %1285, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1386 = shufflevector <4 x half> %1385, <4 x half> %1287, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1387 = shufflevector <1 x half> %1288, <1 x half> %1289, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !59
  %1388 = shufflevector <4 x half> %1387, <4 x half> %1291, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !59
  %1389 = shufflevector <4 x half> %1388, <4 x half> %1293, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !59
  %1390 = extractelement <2 x i32> %1100, i64 0, !dbg !59
  %1391 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %1390), !dbg !59
  %1392 = insertelement <2 x i32> poison, i32 %1391, i64 0, !dbg !59
  %1393 = extractelement <2 x i32> %1100, i64 1, !dbg !59
  %1394 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %1393), !dbg !59
  %1395 = insertelement <2 x i32> %1392, i32 %1394, i64 1, !dbg !59
  %1396 = bitcast <2 x i32> %1395 to <4 x half>, !dbg !59
  %1397 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1296, <4 x half> %1396, <4 x float> %1068, i32 0, i32 0, i32 0), !dbg !59
  %1398 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %1390), !dbg !59
  %1399 = insertelement <2 x i32> poison, i32 %1398, i64 0, !dbg !59
  %1400 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %1393), !dbg !59
  %1401 = insertelement <2 x i32> %1399, i32 %1400, i64 1, !dbg !59
  %1402 = bitcast <2 x i32> %1401 to <4 x half>, !dbg !59
  %1403 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1299, <4 x half> %1402, <4 x float> %1397, i32 0, i32 0, i32 0), !dbg !59
  %1404 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %1390), !dbg !59
  %1405 = insertelement <2 x i32> poison, i32 %1404, i64 0, !dbg !59
  %1406 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %1393), !dbg !59
  %1407 = insertelement <2 x i32> %1405, i32 %1406, i64 1, !dbg !59
  %1408 = bitcast <2 x i32> %1407 to <4 x half>, !dbg !59
  %1409 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1302, <4 x half> %1408, <4 x float> %1403, i32 0, i32 0, i32 0), !dbg !59
  %1410 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %1390), !dbg !59
  %1411 = insertelement <2 x i32> poison, i32 %1410, i64 0, !dbg !59
  %1412 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %1393), !dbg !59
  %1413 = insertelement <2 x i32> %1411, i32 %1412, i64 1, !dbg !59
  %1414 = bitcast <2 x i32> %1413 to <4 x half>, !dbg !59
  %1415 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1305, <4 x half> %1414, <4 x float> %1409, i32 0, i32 0, i32 0), !dbg !59
  %1416 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %1390), !dbg !59
  %1417 = insertelement <2 x i32> poison, i32 %1416, i64 0, !dbg !59
  %1418 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %1393), !dbg !59
  %1419 = insertelement <2 x i32> %1417, i32 %1418, i64 1, !dbg !59
  %1420 = bitcast <2 x i32> %1419 to <4 x half>, !dbg !59
  %1421 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1308, <4 x half> %1420, <4 x float> %1415, i32 0, i32 0, i32 0), !dbg !59
  %1422 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %1390), !dbg !59
  %1423 = insertelement <2 x i32> poison, i32 %1422, i64 0, !dbg !59
  %1424 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %1393), !dbg !59
  %1425 = insertelement <2 x i32> %1423, i32 %1424, i64 1, !dbg !59
  %1426 = bitcast <2 x i32> %1425 to <4 x half>, !dbg !59
  %1427 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1311, <4 x half> %1426, <4 x float> %1421, i32 0, i32 0, i32 0), !dbg !59
  %1428 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %1390), !dbg !59
  %1429 = insertelement <2 x i32> poison, i32 %1428, i64 0, !dbg !59
  %1430 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %1393), !dbg !59
  %1431 = insertelement <2 x i32> %1429, i32 %1430, i64 1, !dbg !59
  %1432 = bitcast <2 x i32> %1431 to <4 x half>, !dbg !59
  %1433 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1314, <4 x half> %1432, <4 x float> %1427, i32 0, i32 0, i32 0), !dbg !59
  %1434 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %1390), !dbg !59
  %1435 = insertelement <2 x i32> poison, i32 %1434, i64 0, !dbg !59
  %1436 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %1393), !dbg !59
  %1437 = insertelement <2 x i32> %1435, i32 %1436, i64 1, !dbg !59
  %1438 = bitcast <2 x i32> %1437 to <4 x half>, !dbg !59
  %1439 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1317, <4 x half> %1438, <4 x float> %1433, i32 0, i32 0, i32 0), !dbg !59
  %1440 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %1390), !dbg !59
  %1441 = insertelement <2 x i32> poison, i32 %1440, i64 0, !dbg !59
  %1442 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %1393), !dbg !59
  %1443 = insertelement <2 x i32> %1441, i32 %1442, i64 1, !dbg !59
  %1444 = bitcast <2 x i32> %1443 to <4 x half>, !dbg !59
  %1445 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1320, <4 x half> %1444, <4 x float> %1439, i32 0, i32 0, i32 0), !dbg !59
  %1446 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %1390), !dbg !59
  %1447 = insertelement <2 x i32> poison, i32 %1446, i64 0, !dbg !59
  %1448 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %1393), !dbg !59
  %1449 = insertelement <2 x i32> %1447, i32 %1448, i64 1, !dbg !59
  %1450 = bitcast <2 x i32> %1449 to <4 x half>, !dbg !59
  %1451 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1323, <4 x half> %1450, <4 x float> %1445, i32 0, i32 0, i32 0), !dbg !59
  %1452 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %1390), !dbg !59
  %1453 = insertelement <2 x i32> poison, i32 %1452, i64 0, !dbg !59
  %1454 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %1393), !dbg !59
  %1455 = insertelement <2 x i32> %1453, i32 %1454, i64 1, !dbg !59
  %1456 = bitcast <2 x i32> %1455 to <4 x half>, !dbg !59
  %1457 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1326, <4 x half> %1456, <4 x float> %1451, i32 0, i32 0, i32 0), !dbg !59
  %1458 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %1390), !dbg !59
  %1459 = insertelement <2 x i32> poison, i32 %1458, i64 0, !dbg !59
  %1460 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %1393), !dbg !59
  %1461 = insertelement <2 x i32> %1459, i32 %1460, i64 1, !dbg !59
  %1462 = bitcast <2 x i32> %1461 to <4 x half>, !dbg !59
  %1463 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1329, <4 x half> %1462, <4 x float> %1457, i32 0, i32 0, i32 0), !dbg !59
  %1464 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %1390), !dbg !59
  %1465 = insertelement <2 x i32> poison, i32 %1464, i64 0, !dbg !59
  %1466 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %1393), !dbg !59
  %1467 = insertelement <2 x i32> %1465, i32 %1466, i64 1, !dbg !59
  %1468 = bitcast <2 x i32> %1467 to <4 x half>, !dbg !59
  %1469 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1332, <4 x half> %1468, <4 x float> %1463, i32 0, i32 0, i32 0), !dbg !59
  %1470 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %1390), !dbg !59
  %1471 = insertelement <2 x i32> poison, i32 %1470, i64 0, !dbg !59
  %1472 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %1393), !dbg !59
  %1473 = insertelement <2 x i32> %1471, i32 %1472, i64 1, !dbg !59
  %1474 = bitcast <2 x i32> %1473 to <4 x half>, !dbg !59
  %1475 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1335, <4 x half> %1474, <4 x float> %1469, i32 0, i32 0, i32 0), !dbg !59
  %1476 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %1390), !dbg !59
  %1477 = insertelement <2 x i32> poison, i32 %1476, i64 0, !dbg !59
  %1478 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %1393), !dbg !59
  %1479 = insertelement <2 x i32> %1477, i32 %1478, i64 1, !dbg !59
  %1480 = bitcast <2 x i32> %1479 to <4 x half>, !dbg !59
  %1481 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1338, <4 x half> %1480, <4 x float> %1475, i32 0, i32 0, i32 0), !dbg !59
  %1482 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %1390), !dbg !59
  %1483 = insertelement <2 x i32> poison, i32 %1482, i64 0, !dbg !59
  %1484 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %1393), !dbg !59
  %1485 = insertelement <2 x i32> %1483, i32 %1484, i64 1, !dbg !59
  %1486 = bitcast <2 x i32> %1485 to <4 x half>, !dbg !59
  %1487 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1341, <4 x half> %1486, <4 x float> %1481, i32 0, i32 0, i32 0), !dbg !59
  %1488 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1344, <4 x half> %1396, <4 x float> %1071, i32 0, i32 0, i32 0), !dbg !59
  %1489 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1347, <4 x half> %1402, <4 x float> %1488, i32 0, i32 0, i32 0), !dbg !59
  %1490 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1350, <4 x half> %1408, <4 x float> %1489, i32 0, i32 0, i32 0), !dbg !59
  %1491 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1353, <4 x half> %1414, <4 x float> %1490, i32 0, i32 0, i32 0), !dbg !59
  %1492 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1356, <4 x half> %1420, <4 x float> %1491, i32 0, i32 0, i32 0), !dbg !59
  %1493 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1359, <4 x half> %1426, <4 x float> %1492, i32 0, i32 0, i32 0), !dbg !59
  %1494 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1362, <4 x half> %1432, <4 x float> %1493, i32 0, i32 0, i32 0), !dbg !59
  %1495 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1365, <4 x half> %1438, <4 x float> %1494, i32 0, i32 0, i32 0), !dbg !59
  %1496 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1368, <4 x half> %1444, <4 x float> %1495, i32 0, i32 0, i32 0), !dbg !59
  %1497 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1371, <4 x half> %1450, <4 x float> %1496, i32 0, i32 0, i32 0), !dbg !59
  %1498 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1374, <4 x half> %1456, <4 x float> %1497, i32 0, i32 0, i32 0), !dbg !59
  %1499 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1377, <4 x half> %1462, <4 x float> %1498, i32 0, i32 0, i32 0), !dbg !59
  %1500 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1380, <4 x half> %1468, <4 x float> %1499, i32 0, i32 0, i32 0), !dbg !59
  %1501 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1383, <4 x half> %1474, <4 x float> %1500, i32 0, i32 0, i32 0), !dbg !59
  %1502 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1386, <4 x half> %1480, <4 x float> %1501, i32 0, i32 0, i32 0), !dbg !59
  %1503 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1389, <4 x half> %1486, <4 x float> %1502, i32 0, i32 0, i32 0), !dbg !59
  %1504 = extractelement <2 x i32> %1101, i64 0, !dbg !59
  %1505 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %1504), !dbg !59
  %1506 = insertelement <2 x i32> poison, i32 %1505, i64 0, !dbg !59
  %1507 = extractelement <2 x i32> %1101, i64 1, !dbg !59
  %1508 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %120, i32 %1507), !dbg !59
  %1509 = insertelement <2 x i32> %1506, i32 %1508, i64 1, !dbg !59
  %1510 = bitcast <2 x i32> %1509 to <4 x half>, !dbg !59
  %1511 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1296, <4 x half> %1510, <4 x float> %1074, i32 0, i32 0, i32 0), !dbg !59
  %1512 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %1504), !dbg !59
  %1513 = insertelement <2 x i32> poison, i32 %1512, i64 0, !dbg !59
  %1514 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %197, i32 %1507), !dbg !59
  %1515 = insertelement <2 x i32> %1513, i32 %1514, i64 1, !dbg !59
  %1516 = bitcast <2 x i32> %1515 to <4 x half>, !dbg !59
  %1517 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1299, <4 x half> %1516, <4 x float> %1511, i32 0, i32 0, i32 0), !dbg !59
  %1518 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %1504), !dbg !59
  %1519 = insertelement <2 x i32> poison, i32 %1518, i64 0, !dbg !59
  %1520 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %198, i32 %1507), !dbg !59
  %1521 = insertelement <2 x i32> %1519, i32 %1520, i64 1, !dbg !59
  %1522 = bitcast <2 x i32> %1521 to <4 x half>, !dbg !59
  %1523 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1302, <4 x half> %1522, <4 x float> %1517, i32 0, i32 0, i32 0), !dbg !59
  %1524 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %1504), !dbg !59
  %1525 = insertelement <2 x i32> poison, i32 %1524, i64 0, !dbg !59
  %1526 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %199, i32 %1507), !dbg !59
  %1527 = insertelement <2 x i32> %1525, i32 %1526, i64 1, !dbg !59
  %1528 = bitcast <2 x i32> %1527 to <4 x half>, !dbg !59
  %1529 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1305, <4 x half> %1528, <4 x float> %1523, i32 0, i32 0, i32 0), !dbg !59
  %1530 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %1504), !dbg !59
  %1531 = insertelement <2 x i32> poison, i32 %1530, i64 0, !dbg !59
  %1532 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %121, i32 %1507), !dbg !59
  %1533 = insertelement <2 x i32> %1531, i32 %1532, i64 1, !dbg !59
  %1534 = bitcast <2 x i32> %1533 to <4 x half>, !dbg !59
  %1535 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1308, <4 x half> %1534, <4 x float> %1529, i32 0, i32 0, i32 0), !dbg !59
  %1536 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %1504), !dbg !59
  %1537 = insertelement <2 x i32> poison, i32 %1536, i64 0, !dbg !59
  %1538 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %200, i32 %1507), !dbg !59
  %1539 = insertelement <2 x i32> %1537, i32 %1538, i64 1, !dbg !59
  %1540 = bitcast <2 x i32> %1539 to <4 x half>, !dbg !59
  %1541 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1311, <4 x half> %1540, <4 x float> %1535, i32 0, i32 0, i32 0), !dbg !59
  %1542 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %1504), !dbg !59
  %1543 = insertelement <2 x i32> poison, i32 %1542, i64 0, !dbg !59
  %1544 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %201, i32 %1507), !dbg !59
  %1545 = insertelement <2 x i32> %1543, i32 %1544, i64 1, !dbg !59
  %1546 = bitcast <2 x i32> %1545 to <4 x half>, !dbg !59
  %1547 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1314, <4 x half> %1546, <4 x float> %1541, i32 0, i32 0, i32 0), !dbg !59
  %1548 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %1504), !dbg !59
  %1549 = insertelement <2 x i32> poison, i32 %1548, i64 0, !dbg !59
  %1550 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %202, i32 %1507), !dbg !59
  %1551 = insertelement <2 x i32> %1549, i32 %1550, i64 1, !dbg !59
  %1552 = bitcast <2 x i32> %1551 to <4 x half>, !dbg !59
  %1553 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1317, <4 x half> %1552, <4 x float> %1547, i32 0, i32 0, i32 0), !dbg !59
  %1554 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %1504), !dbg !59
  %1555 = insertelement <2 x i32> poison, i32 %1554, i64 0, !dbg !59
  %1556 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %203, i32 %1507), !dbg !59
  %1557 = insertelement <2 x i32> %1555, i32 %1556, i64 1, !dbg !59
  %1558 = bitcast <2 x i32> %1557 to <4 x half>, !dbg !59
  %1559 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1320, <4 x half> %1558, <4 x float> %1553, i32 0, i32 0, i32 0), !dbg !59
  %1560 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %1504), !dbg !59
  %1561 = insertelement <2 x i32> poison, i32 %1560, i64 0, !dbg !59
  %1562 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %204, i32 %1507), !dbg !59
  %1563 = insertelement <2 x i32> %1561, i32 %1562, i64 1, !dbg !59
  %1564 = bitcast <2 x i32> %1563 to <4 x half>, !dbg !59
  %1565 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1323, <4 x half> %1564, <4 x float> %1559, i32 0, i32 0, i32 0), !dbg !59
  %1566 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %1504), !dbg !59
  %1567 = insertelement <2 x i32> poison, i32 %1566, i64 0, !dbg !59
  %1568 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %205, i32 %1507), !dbg !59
  %1569 = insertelement <2 x i32> %1567, i32 %1568, i64 1, !dbg !59
  %1570 = bitcast <2 x i32> %1569 to <4 x half>, !dbg !59
  %1571 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1326, <4 x half> %1570, <4 x float> %1565, i32 0, i32 0, i32 0), !dbg !59
  %1572 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %1504), !dbg !59
  %1573 = insertelement <2 x i32> poison, i32 %1572, i64 0, !dbg !59
  %1574 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %206, i32 %1507), !dbg !59
  %1575 = insertelement <2 x i32> %1573, i32 %1574, i64 1, !dbg !59
  %1576 = bitcast <2 x i32> %1575 to <4 x half>, !dbg !59
  %1577 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1329, <4 x half> %1576, <4 x float> %1571, i32 0, i32 0, i32 0), !dbg !59
  %1578 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %1504), !dbg !59
  %1579 = insertelement <2 x i32> poison, i32 %1578, i64 0, !dbg !59
  %1580 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %207, i32 %1507), !dbg !59
  %1581 = insertelement <2 x i32> %1579, i32 %1580, i64 1, !dbg !59
  %1582 = bitcast <2 x i32> %1581 to <4 x half>, !dbg !59
  %1583 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1332, <4 x half> %1582, <4 x float> %1577, i32 0, i32 0, i32 0), !dbg !59
  %1584 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %1504), !dbg !59
  %1585 = insertelement <2 x i32> poison, i32 %1584, i64 0, !dbg !59
  %1586 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %208, i32 %1507), !dbg !59
  %1587 = insertelement <2 x i32> %1585, i32 %1586, i64 1, !dbg !59
  %1588 = bitcast <2 x i32> %1587 to <4 x half>, !dbg !59
  %1589 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1335, <4 x half> %1588, <4 x float> %1583, i32 0, i32 0, i32 0), !dbg !59
  %1590 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %1504), !dbg !59
  %1591 = insertelement <2 x i32> poison, i32 %1590, i64 0, !dbg !59
  %1592 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %209, i32 %1507), !dbg !59
  %1593 = insertelement <2 x i32> %1591, i32 %1592, i64 1, !dbg !59
  %1594 = bitcast <2 x i32> %1593 to <4 x half>, !dbg !59
  %1595 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1338, <4 x half> %1594, <4 x float> %1589, i32 0, i32 0, i32 0), !dbg !59
  %1596 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %1504), !dbg !59
  %1597 = insertelement <2 x i32> poison, i32 %1596, i64 0, !dbg !59
  %1598 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %210, i32 %1507), !dbg !59
  %1599 = insertelement <2 x i32> %1597, i32 %1598, i64 1, !dbg !59
  %1600 = bitcast <2 x i32> %1599 to <4 x half>, !dbg !59
  %1601 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1341, <4 x half> %1600, <4 x float> %1595, i32 0, i32 0, i32 0), !dbg !59
  %1602 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1344, <4 x half> %1510, <4 x float> %1077, i32 0, i32 0, i32 0), !dbg !59
  %1603 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1347, <4 x half> %1516, <4 x float> %1602, i32 0, i32 0, i32 0), !dbg !59
  %1604 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1350, <4 x half> %1522, <4 x float> %1603, i32 0, i32 0, i32 0), !dbg !59
  %1605 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1353, <4 x half> %1528, <4 x float> %1604, i32 0, i32 0, i32 0), !dbg !59
  %1606 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1356, <4 x half> %1534, <4 x float> %1605, i32 0, i32 0, i32 0), !dbg !59
  %1607 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1359, <4 x half> %1540, <4 x float> %1606, i32 0, i32 0, i32 0), !dbg !59
  %1608 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1362, <4 x half> %1546, <4 x float> %1607, i32 0, i32 0, i32 0), !dbg !59
  %1609 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1365, <4 x half> %1552, <4 x float> %1608, i32 0, i32 0, i32 0), !dbg !59
  %1610 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1368, <4 x half> %1558, <4 x float> %1609, i32 0, i32 0, i32 0), !dbg !59
  %1611 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1371, <4 x half> %1564, <4 x float> %1610, i32 0, i32 0, i32 0), !dbg !59
  %1612 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1374, <4 x half> %1570, <4 x float> %1611, i32 0, i32 0, i32 0), !dbg !59
  %1613 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1377, <4 x half> %1576, <4 x float> %1612, i32 0, i32 0, i32 0), !dbg !59
  %1614 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1380, <4 x half> %1582, <4 x float> %1613, i32 0, i32 0, i32 0), !dbg !59
  %1615 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1383, <4 x half> %1588, <4 x float> %1614, i32 0, i32 0, i32 0), !dbg !59
  %1616 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1386, <4 x half> %1594, <4 x float> %1615, i32 0, i32 0, i32 0), !dbg !59
  %1617 = tail call <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half> %1389, <4 x half> %1600, <4 x float> %1616, i32 0, i32 0, i32 0), !dbg !59
  %1618 = insertelement <2 x float> %1065, float %1062, i64 1, !dbg !85
  %1619 = fmul <2 x float> %515, %1618, !dbg !85
  %1620 = fadd <2 x half> %1080, %1083, !dbg !86
  %1621 = fadd <2 x half> %1620, %1086, !dbg !86
  %1622 = fadd <2 x half> %1621, %1089, !dbg !86
  %bc = bitcast <2 x half> %1622 to <2 x i16>, !dbg !88
  %1623 = extractelement <2 x i16> %bc, i64 1, !dbg !88
  %1624 = sext i16 %1623 to i32, !dbg !88
  %1625 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %217, i32 %1624), !dbg !88
  %bc53 = bitcast <2 x half> %1622 to <2 x i16>, !dbg !88
  %1626 = extractelement <2 x i16> %bc53, i64 0, !dbg !88
  %1627 = sext i16 %1626 to i32, !dbg !88
  %1628 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %217, i32 %1627), !dbg !88
  %1629 = insertelement <2 x i32> poison, i32 %1628, i64 0, !dbg !88
  %1630 = insertelement <2 x i32> %1629, i32 %1625, i64 1, !dbg !88
  %1631 = trunc <2 x i32> %1630 to <2 x i16>, !dbg !88
  %1632 = bitcast <2 x i16> %1631 to <2 x half>, !dbg !88
  %1633 = fadd <2 x half> %1622, %1632, !dbg !86
  %bc54 = bitcast <2 x half> %1633 to <2 x i16>, !dbg !88
  %1634 = extractelement <2 x i16> %bc54, i64 1, !dbg !88
  %1635 = sext i16 %1634 to i32, !dbg !88
  %1636 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1635, i32 16415), !dbg !88
  %bc55 = bitcast <2 x half> %1633 to <2 x i16>, !dbg !88
  %1637 = extractelement <2 x i16> %bc55, i64 0, !dbg !88
  %1638 = sext i16 %1637 to i32, !dbg !88
  %1639 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1638, i32 16415), !dbg !88
  %1640 = insertelement <2 x i32> poison, i32 %1639, i64 0, !dbg !88
  %1641 = insertelement <2 x i32> %1640, i32 %1636, i64 1, !dbg !88
  %1642 = trunc <2 x i32> %1641 to <2 x i16>, !dbg !88
  %1643 = bitcast <2 x i16> %1642 to <2 x half>, !dbg !88
  %1644 = fadd <2 x half> %1633, %1643, !dbg !86
  %bc56 = bitcast <2 x half> %1644 to <2 x i16>, !dbg !88
  %1645 = extractelement <2 x i16> %bc56, i64 1, !dbg !88
  %1646 = sext i16 %1645 to i32, !dbg !88
  %1647 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1646, i32 8223), !dbg !88
  %bc57 = bitcast <2 x half> %1644 to <2 x i16>, !dbg !88
  %1648 = extractelement <2 x i16> %bc57, i64 0, !dbg !88
  %1649 = sext i16 %1648 to i32, !dbg !88
  %1650 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1649, i32 8223), !dbg !88
  %1651 = insertelement <2 x i32> poison, i32 %1650, i64 0, !dbg !88
  %1652 = insertelement <2 x i32> %1651, i32 %1647, i64 1, !dbg !88
  %1653 = trunc <2 x i32> %1652 to <2 x i16>, !dbg !88
  %1654 = bitcast <2 x i16> %1653 to <2 x half>, !dbg !88
  %1655 = fadd <2 x half> %1644, %1654, !dbg !86
  %bc58 = bitcast <2 x half> %1655 to <2 x i16>, !dbg !88
  %1656 = extractelement <2 x i16> %bc58, i64 1, !dbg !88
  %1657 = sext i16 %1656 to i32, !dbg !88
  %1658 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1657, i32 4127), !dbg !88
  %bc59 = bitcast <2 x half> %1655 to <2 x i16>, !dbg !88
  %1659 = extractelement <2 x i16> %bc59, i64 0, !dbg !88
  %1660 = sext i16 %1659 to i32, !dbg !88
  %1661 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %1660, i32 4127), !dbg !88
  %1662 = insertelement <2 x i32> poison, i32 %1661, i64 0, !dbg !88
  %1663 = insertelement <2 x i32> %1662, i32 %1658, i64 1, !dbg !88
  %1664 = trunc <2 x i32> %1663 to <2 x i16>, !dbg !88
  %1665 = bitcast <2 x i16> %1664 to <2 x half>, !dbg !88
  %1666 = fadd <2 x half> %1655, %1665, !dbg !86
  %1667 = fpext <2 x half> %1666 to <2 x float>, !dbg !89
  %1668 = fadd <2 x float> %1619, %1667, !dbg !89
  %1669 = add nuw nsw i32 %514, 1, !dbg !54
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !60
  tail call void @llvm.amdgcn.sched.barrier(i32 0), !dbg !59
  %exitcond.not = icmp eq i32 %1669, %58, !dbg !54
  %1670 = shufflevector <4 x float> %1617, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1671 = shufflevector <4 x float> %1617, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1672 = shufflevector <4 x float> %1601, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1673 = shufflevector <4 x float> %1601, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1674 = shufflevector <4 x float> %1503, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1675 = shufflevector <4 x float> %1503, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  %1676 = shufflevector <4 x float> %1487, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  %1677 = shufflevector <4 x float> %1487, <4 x float> poison, <2 x i32> <i32 2, i32 3>
  br i1 %exitcond.not, label %._crit_edge.loopexit, label %511, !dbg !54

._crit_edge.loopexit:                             ; preds = %511
  %1678 = shufflevector <4 x float> %1503, <4 x float> poison, <2 x i32> <i32 1, i32 2>
  %1679 = shufflevector <4 x float> %1487, <4 x float> poison, <2 x i32> <i32 1, i32 2>
  %1680 = extractelement <4 x float> %1503, i64 3, !dbg !59
  %1681 = extractelement <4 x float> %1503, i64 0, !dbg !59
  %1682 = extractelement <4 x float> %1487, i64 3, !dbg !59
  %1683 = extractelement <4 x float> %1487, i64 0, !dbg !59
  br label %._crit_edge, !dbg !90

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.._crit_edge_crit_edge
  %.pre-phi38 = phi i32 [ %.pre37, %.._crit_edge_crit_edge ], [ %220, %._crit_edge.loopexit ], !dbg !55
  %1684 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1683, %._crit_edge.loopexit ]
  %1685 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1682, %._crit_edge.loopexit ]
  %1686 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1681, %._crit_edge.loopexit ]
  %1687 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1680, %._crit_edge.loopexit ]
  %1688 = phi float [ 0xFFF0000000000000, %.._crit_edge_crit_edge ], [ %1042, %._crit_edge.loopexit ]
  %1689 = phi float [ 0xFFF0000000000000, %.._crit_edge_crit_edge ], [ %1043, %._crit_edge.loopexit ]
  %1690 = phi <2 x float> [ zeroinitializer, %.._crit_edge_crit_edge ], [ %1668, %._crit_edge.loopexit ]
  %1691 = phi <2 x float> [ zeroinitializer, %.._crit_edge_crit_edge ], [ %1679, %._crit_edge.loopexit ]
  %1692 = phi <2 x float> [ zeroinitializer, %.._crit_edge_crit_edge ], [ %1678, %._crit_edge.loopexit ]
  %1693 = extractelement <2 x float> %1690, i64 1, !dbg !90
  %1694 = fdiv float 1.000000e+00, %1693, !dbg !90
  %1695 = fmul float %1684, %1694, !dbg !91
  %1696 = fmul float %1685, %1694, !dbg !91
  %1697 = fmul float %1686, %1694, !dbg !91
  %1698 = fmul float %1687, %1694, !dbg !91
  %1699 = shl i32 %20, 2, !dbg !92
  %1700 = add i32 %1699, %24, !dbg !93
  %1701 = mul i32 %36, %1700, !dbg !94
  %1702 = add i32 %1701, %25, !dbg !95
  %1703 = shl i32 %1702, 3, !dbg !95
  %1704 = add i32 %1703, %64, !dbg !96
  %1705 = icmp ult i32 %64, 8, !dbg !97
  %1706 = sext i32 %1704 to i64, !dbg !98
  %1707 = getelementptr float, ptr addrspace(1) %0, i64 %1706, !dbg !98
  fence syncscope("workgroup") release, !dbg !55
  tail call void @llvm.amdgcn.s.barrier(), !dbg !55
  fence syncscope("workgroup") acquire, !dbg !55
  %1708 = getelementptr float, ptr addrspace(3) @global_smem, i32 %.pre-phi38, !dbg !55
  %1709 = insertelement <1 x float> poison, float %1688, i64 0, !dbg !55
  store <1 x float> %1709, ptr addrspace(3) %1708, align 4, !dbg !55
  %1710 = or disjoint i32 %.pre-phi38, 8, !dbg !55
  %1711 = getelementptr float, ptr addrspace(3) @global_smem, i32 %1710, !dbg !55
  %1712 = insertelement <1 x float> poison, float %1689, i64 0, !dbg !55
  store <1 x float> %1712, ptr addrspace(3) %1711, align 4, !dbg !55
  fence syncscope("workgroup") release, !dbg !55
  tail call void @llvm.amdgcn.s.barrier(), !dbg !55
  fence syncscope("workgroup") acquire, !dbg !55
  %1713 = getelementptr float, ptr addrspace(3) @global_smem, i32 %64, !dbg !55
  %1714 = load <1 x float>, ptr addrspace(3) %1713, align 4, !dbg !55
  %urem = and i32 %41, 112, !dbg !55
  %1715 = icmp eq i32 %urem, 0, !dbg !55
  %1716 = and i1 %1705, %1715, !dbg !55
  %1717 = insertelement <1 x i1> poison, i1 %1716, i64 0, !dbg !55
  tail call void @llvm.masked.store.v1f32.p1(<1 x float> %1714, ptr addrspace(1) %1707, i32 16, <1 x i1> %1717), !dbg !55
  %1718 = getelementptr float, ptr addrspace(1) %1, i64 %1706, !dbg !99
  fence syncscope("workgroup") release, !dbg !100
  tail call void @llvm.amdgcn.s.barrier(), !dbg !100
  fence syncscope("workgroup") acquire, !dbg !100
  %1719 = shufflevector <2 x float> %1690, <2 x float> poison, <1 x i32> <i32 1>, !dbg !100
  store <1 x float> %1719, ptr addrspace(3) %1708, align 4, !dbg !100
  %1720 = shufflevector <2 x float> %1690, <2 x float> poison, <1 x i32> zeroinitializer, !dbg !100
  store <1 x float> %1720, ptr addrspace(3) %1711, align 4, !dbg !100
  fence syncscope("workgroup") release, !dbg !100
  tail call void @llvm.amdgcn.s.barrier(), !dbg !100
  fence syncscope("workgroup") acquire, !dbg !100
  %1721 = load <1 x float>, ptr addrspace(3) %1713, align 4, !dbg !100
  tail call void @llvm.masked.store.v1f32.p1(<1 x float> %1721, ptr addrspace(1) %1718, i32 16, <1 x i1> %1717), !dbg !100
  %1722 = mul i32 %15, %20, !dbg !101
  %1723 = mul i32 %16, %24, !dbg !102
  %1724 = add i32 %1723, %1722, !dbg !103
  %1725 = mul i32 %17, %25, !dbg !104
  %1726 = mul i32 %18, %66, !dbg !105
  %1727 = add i32 %1726, %1725, !dbg !106
  %1728 = add i32 %1727, %1724, !dbg !107
  %1729 = add i32 %1728, %59, !dbg !108
  %1730 = add i32 %65, %1724, !dbg !107
  %1731 = add i32 %1730, %1727, !dbg !108
  %1732 = sext i32 %1729 to i64, !dbg !109
  %1733 = getelementptr half, ptr addrspace(1) %2, i64 %1732, !dbg !109
  %1734 = sext i32 %1731 to i64, !dbg !109
  %1735 = getelementptr half, ptr addrspace(1) %2, i64 %1734, !dbg !109
  %1736 = fptrunc float %1695 to half, !dbg !110
  %1737 = insertelement <2 x float> poison, float %1694, i64 0, !dbg !91
  %1738 = shufflevector <2 x float> %1737, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !91
  %1739 = fmul <2 x float> %1691, %1738, !dbg !91
  %1740 = fptrunc <2 x float> %1739 to <2 x half>, !dbg !110
  %1741 = fptrunc float %1696 to half, !dbg !110
  %1742 = fptrunc float %1697 to half, !dbg !110
  %1743 = fmul <2 x float> %1692, %1738, !dbg !91
  %1744 = fptrunc <2 x float> %1743 to <2 x half>, !dbg !110
  %1745 = fptrunc float %1698 to half, !dbg !110
  %1746 = insertelement <4 x half> poison, half %1736, i64 0, !dbg !110
  %1747 = shufflevector <2 x half> %1740, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !110
  %1748 = shufflevector <4 x half> %1746, <4 x half> %1747, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !110
  %1749 = insertelement <4 x half> %1748, half %1741, i64 3, !dbg !110
  store <4 x half> %1749, ptr addrspace(1) %1733, align 16, !dbg !110
  %1750 = insertelement <4 x half> poison, half %1742, i64 0, !dbg !110
  %1751 = shufflevector <2 x half> %1744, <2 x half> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !110
  %1752 = shufflevector <4 x half> %1750, <4 x half> %1751, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>, !dbg !110
  %1753 = insertelement <4 x half> %1752, half %1745, i64 3, !dbg !110
  store <4 x half> %1753, ptr addrspace(1) %1735, align 16, !dbg !110
  br label %common.ret, !dbg !111
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.y() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.z() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.sched.barrier(i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.bpermute(i32, i32) #3

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.f32.4x4x4f16(<4 x half>, <4 x half>, <4 x float>, i32 immarg, i32 immarg, i32 immarg) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #0

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.swizzle(i32, i32 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef nonnull align 4 ptr addrspace(4) @llvm.amdgcn.dispatch.ptr() #0

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.masked.store.v1f32.p1(<1 x float>, ptr addrspace(1) nocapture, i32 immarg, <1 x i1>) #5

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,128" "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #4 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.dbg.cu = !{!4}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = !{i32 1, !"wchar_size", i32 4}
!3 = !{i32 8, !"PIC Level", i32 0}
!4 = distinct !DICompileUnit(language: DW_LANG_C, file: !5, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!5 = !DIFile(filename: "paged_attn.py", directory: "/opt/conda/envs/py_3.10/lib/python3.10/site-packages/flashnn-0.1.1-py3.10.egg/flashnn/triton_kernels")
!6 = !DISubprogram(name: "llvm.amdgcn.exp2.f32", linkageName: "llvm.amdgcn.exp2.f32", scope: !5, file: !5, line: 303, type: !7, scopeLine: 303, spFlags: DISPFlagOptimized)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = distinct !DISubprogram(name: "_paged_attn_w_mma_kernel", linkageName: "_paged_attn_w_mma_kernel", scope: !5, file: !5, line: 199, type: !7, scopeLine: 199, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4)
!10 = !DILocation(line: 230, column: 28, scope: !9)
!11 = !DILocation(line: 241, column: 45, scope: !9)
!12 = !DILocation(line: 241, column: 26, scope: !9)
!13 = !DILocation(line: 231, column: 32, scope: !9)
!14 = !DILocation(line: 232, column: 29, scope: !9)
!15 = !DILocation(line: 233, column: 41, scope: !9)
!16 = !{!17, !21, i64 20}
!17 = !{!"hsa_kernel_dispatch_packet_s", !18, i64 0, !18, i64 2, !18, i64 4, !18, i64 6, !18, i64 8, !18, i64 10, !21, i64 12, !21, i64 16, !21, i64 20, !21, i64 24, !21, i64 28, !19, i64 32, !22, i64 40, !23, i64 48, !24, i64 56}
!18 = !{!"short", !19, i64 0}
!19 = !{!"omnipotent char", !20, i64 0}
!20 = !{!"Simple C/C++ TBAA"}
!21 = !{!"int", !19, i64 0}
!22 = !{!"any pointer", !19, i64 0}
!23 = !{!"long", !19, i64 0}
!24 = !{!"hsa_signal_s", !23, i64 0}
!25 = !{i16 1, i16 1025}
!26 = !DILocation(line: 243, column: 39, scope: !9)
!27 = !DILocation(line: 244, column: 32, scope: !9)
!28 = !DILocation(line: 0, scope: !9)
!29 = !DILocation(line: 263, column: 18, scope: !9)
!30 = !DILocation(line: 264, column: 25, scope: !9)
!31 = !DILocation(line: 264, column: 65, scope: !9)
!32 = !DILocation(line: 264, column: 44, scope: !9)
!33 = !DILocation(line: 264, column: 77, scope: !9)
!34 = !DILocation(line: 258, column: 22, scope: !9)
!35 = !DILocation(line: 264, column: 10, scope: !9)
!36 = !DILocation(line: 265, column: 10, scope: !9)
!37 = !DILocation(line: 269, column: 24, scope: !9)
!38 = !DILocation(line: 269, column: 16, scope: !9)
!39 = !DILocation(line: 246, column: 57, scope: !9)
!40 = !DILocation(line: 246, column: 73, scope: !9)
!41 = !DILocation(line: 40, column: 22, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !9, file: !43, discriminator: 0)
!43 = !DIFile(filename: "standard.py", directory: "/triton/python/triton/language")
!44 = !DILocation(line: 247, column: 66, scope: !9)
!45 = !DILocation(line: 40, column: 28, scope: !42, inlinedAt: !44)
!46 = !DILocation(line: 251, column: 32, scope: !9)
!47 = !DILocation(line: 253, column: 40, scope: !9)
!48 = !DILocation(line: 270, column: 13, scope: !9)
!49 = !DILocation(line: 270, column: 26, scope: !9)
!50 = !DILocation(line: 270, column: 36, scope: !9)
!51 = !DILocation(line: 276, column: 34, scope: !9)
!52 = !DILocation(line: 280, column: 41, scope: !9)
!53 = !DILocation(line: 280, column: 31, scope: !9)
!54 = !DILocation(line: 277, column: 19, scope: !9)
!55 = !DILocation(line: 330, column: 40, scope: !9)
!56 = !DILocation(line: 257, column: 23, scope: !9)
!57 = !DILocation(line: 257, column: 34, scope: !9)
!58 = !DILocation(line: 256, column: 22, scope: !9)
!59 = !DILocation(line: 314, column: 25, scope: !9)
!60 = !DILocation(line: 295, column: 23, scope: !9)
!61 = !DILocation(line: 278, column: 38, scope: !9)
!62 = !DILocation(line: 280, column: 54, scope: !9)
!63 = !DILocation(line: 280, column: 12, scope: !9)
!64 = !DILocation(line: 284, column: 41, scope: !9)
!65 = !DILocation(line: 284, column: 54, scope: !9)
!66 = !DILocation(line: 289, column: 34, scope: !9)
!67 = !DILocation(line: 289, column: 20, scope: !9)
!68 = !DILocation(line: 308, column: 34, scope: !9)
!69 = !DILocation(line: 308, column: 20, scope: !9)
!70 = !DILocation(line: 285, column: 34, scope: !9)
!71 = !DILocation(line: 285, column: 50, scope: !9)
!72 = !DILocation(line: 298, column: 36, scope: !9)
!73 = !DILocation(line: 298, column: 53, scope: !9)
!74 = !DILocation(line: 163, column: 27, scope: !75, inlinedAt: !76)
!75 = distinct !DILexicalBlockFile(scope: !42, file: !43, discriminator: 0)
!76 = !DILocation(line: 300, column: 41, scope: !9)
!77 = !DILocation(line: 184, column: 40, scope: !42, inlinedAt: !76)
!78 = !DILocation(line: 300, column: 34, scope: !9)
!79 = !DILocation(line: 303, column: 31, scope: !9)
!80 = !DILocation(line: 303, column: 26, scope: !9)
!81 = !DILocation(line: 304, column: 36, scope: !9)
!82 = !DILocation(line: 304, column: 30, scope: !9)
!83 = !DILocation(line: 305, column: 15, scope: !9)
!84 = !DILocation(line: 313, column: 17, scope: !9)
!85 = !DILocation(line: 316, column: 20, scope: !9)
!86 = !DILocation(line: 256, column: 15, scope: !75, inlinedAt: !87)
!87 = !DILocation(line: 316, column: 35, scope: !9)
!88 = !DILocation(line: 267, column: 36, scope: !42, inlinedAt: !87)
!89 = !DILocation(line: 316, column: 28, scope: !9)
!90 = !DILocation(line: 318, column: 18, scope: !9)
!91 = !DILocation(line: 319, column: 16, scope: !9)
!92 = !DILocation(line: 323, column: 23, scope: !9)
!93 = !DILocation(line: 323, column: 38, scope: !9)
!94 = !DILocation(line: 324, column: 14, scope: !9)
!95 = !DILocation(line: 326, column: 14, scope: !9)
!96 = !DILocation(line: 327, column: 14, scope: !9)
!97 = !DILocation(line: 329, column: 38, scope: !9)
!98 = !DILocation(line: 330, column: 27, scope: !9)
!99 = !DILocation(line: 331, column: 27, scope: !9)
!100 = !DILocation(line: 331, column: 40, scope: !9)
!101 = !DILocation(line: 333, column: 27, scope: !9)
!102 = !DILocation(line: 335, column: 36, scope: !9)
!103 = !DILocation(line: 335, column: 22, scope: !9)
!104 = !DILocation(line: 339, column: 19, scope: !9)
!105 = !DILocation(line: 340, column: 42, scope: !9)
!106 = !DILocation(line: 340, column: 10, scope: !9)
!107 = !DILocation(line: 341, column: 10, scope: !9)
!108 = !DILocation(line: 339, column: 8, scope: !9)
!109 = !DILocation(line: 345, column: 23, scope: !9)
!110 = !DILocation(line: 345, column: 35, scope: !9)
!111 = !DILocation(line: 345, column: 4, scope: !9)
